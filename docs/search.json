[{"path":"https://evamaerey.github.io/ma206distributions/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2023 ma206distributions authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://evamaerey.github.io/ma206distributions/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Isaac Folorunso. Author, maintainer.","code":""},{"path":"https://evamaerey.github.io/ma206distributions/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Folorunso (2023). ma206distributions: Functionality intro probability curricula. R package version 0.0.0.9000, https://evamaerey.github.io/ma206distributions/.","code":"@Manual{,   title = {ma206distributions: Functionality for intro probability curricula},   author = {Isaac Folorunso},   year = {2023},   note = {R package version 0.0.0.9000},   url = {https://evamaerey.github.io/ma206distributions/}, }"},{"path":"https://evamaerey.github.io/ma206distributions/index.html","id":"ma206distributions","dir":"","previous_headings":"","what":"ma206distributions","title":"Functionality for intro probability curricula","text":"ma206distributions package allows easily visualize common distributions statistical probabilistic analytics ggplot2. package built along side sister package ma206equations. packages discussed , source code ma206equations resides . See also ma206data .","code":""},{"path":"https://evamaerey.github.io/ma206distributions/index.html","id":"note-to-the-reader","dir":"","previous_headings":"","what":"Note to the reader","title":"Functionality for intro probability curricula","text":"feedback work greatly appreciated. Beyond descriptions work, interject comments hesitations 🤔 areas need work 🚧, consideration marked emoji.","code":""},{"path":"https://evamaerey.github.io/ma206distributions/index.html","id":"abstract","dir":"","previous_headings":"","what":"Abstract","title":"Functionality for intro probability curricula","text":"Mathematical fluency involves frequent use probability distributions course equations. However, visualizing distributions software typing equations can tedious. well-defined statistics probability curriculum, set distributions equations mastered known limited. goal project provide ready--use functions make easier engage computationally distributions equations.","code":""},{"path":[]},{"path":"https://evamaerey.github.io/ma206distributions/index.html","id":"binomial-distribution-with-tidy_dbinom","dir":"","previous_headings":"Abstract > Objective #1. provide data frames that relate outcomes and probabilities","what":"Binomial distribution with tidy_dbinom","title":"Functionality for intro probability curricula","text":"Currently, students may use R calculator quick computation probabilistic quantities. However, using existing methodologies may divorce quantities useful context. example, consider question: probability rolling six exactly two times eight die rolls. Solving problem current toolbox might look like . solution concise, lacks context, doesn’t nicely parlay answer related adjacent questions. propose instead full set paired outcomes probabilities made available students asking question via ma206distributions function tidy_dbinom. answer preceding question, , students consult table produce using function: 🤔 tidy_dbinom called something else? Maybe dbinom_df better? df_dbinom? part fad calling everything ‘tidy’ meaning much? 🙃 🤔 🚧 single_trial_prob num_trials columns appropriately stored meta data? best . Source code 🤔 🚧 way avoid printing row number .Rmd rendering? feels confusing just index one num_successes. Within interactive session, row numbers don’t show distract good. Consulting table, students find ‘2 successes’ outcome find associated probability .260! can consult table answer number additional questions scenario. probability rolling six one time? Zero sixes? probability rolling two successes (sixes) fewer? students interested visual presentation, might also use distribution combined ggplot2 plotting system, uses data frame inputs. complement probabilistic work, ma206distributions package also contains geom_lollipop() function display outcome-probability pairing via ‘lollipop’ chart popular visualizing discrete distributions. Furthermore, ma206distributions package also contains scale_x_counting() function ensures tick marks numerical values provided counting values x, support distribution.  package ma206data also gives stamp shortcut data visualization layer, used following manner. method might used instructors students alike comfortable distribution’s underpinnings. 🚧 website pkgdown version [https://evamaerey.github.io/ma206distributions], pkgdown failing deliver visuals create README.rmd? Getting error: Warning message: Missing images ‘README.md’: ‘README_files/figure-gfm/unnamed-chunk-3-1.png’, pkgdown can use images ‘man/figures’ ‘vignettes’ fixed, working : https://github.com/r-lib/pkgdown/pull/1977 😭 😭 😭 Go readme plots: https://github.com/EvaMaeRey/ma206distributions  🚧 isn’t annotate (labeling option) working stamp_dbinom()? 😭 See source code geom_lollipop(), annotate work .","code":"dbinom(x = 2, size = 8, prob = 1/6) [1] 0.2604762 library(ma206distributions) options(scipen = 8, digits = 3) tidy_dbinom(single_trial_prob = 1/6, 8) # A tibble: 9 × 4      num_successes probability single_trial_prob num_trials              <int>       <dbl>             <dbl>      <dbl>    1             0 0.233                   0.167          8    2             1 0.372                   0.167          8    3             2 0.260                   0.167          8    4             3 0.104                   0.167          8    5             4 0.0260                  0.167          8    6             5 0.00417                 0.167          8    7             6 0.000417                0.167          8    8             7 0.0000238               0.167          8    9             8 0.000000595             0.167          8 library(ma206distributions) library(tidyverse) tidy_dbinom(single_trial_prob = 1/6, num_trials = 10) %>%   # from ma206distributions   ggplot() +    labs(title = \"Rolling a die 10 times: \\nProbabilities of rolling 0 sixes, 1 six, 2 sixes,...10 sixes\") +   aes(x = num_successes,        y = probability) +    geom_lollipop(annotate = T) +           # from ma206distributions   scale_x_counting()                      # from ma206distributions library(ma206equations) ggplot() +    stamp_dbinom(single_trial_prob = 1/6,                 num_trials = 10,                annotate = T) +    # from ma206distributions   scale_x_counting() +                                        # from ma206distributions   labs(title = \"Rolling a die 10 times: \\nProbabilities of rolling 0 sixes, 1 six, 2 sixes,...10 sixes\") +     geom_lollipop(annotate = T,  # help! why doesn't this work?                 data = tidy_dbinom(single_trial_prob = 1/6,                                    num_trials = 10),                 mapping = ggplot2::aes(x = num_successes, y = probability))"},{"path":"https://evamaerey.github.io/ma206distributions/index.html","id":"including-relevant-equations","dir":"","previous_headings":"Abstract","what":"Including relevant equations","title":"Functionality for intro probability curricula","text":"complementary package, ma206equations exists can deliver relevant equations part distributional plots. Students instructors can stamp equation calculate probability binomial distribution, well choose equation need unpacked.  🚧 probably including left hand side equation stamp_eq_binomial. See equations spreadsheet . 🚧 probably consistent capitalization (N v. n) selection variable (k v. r). See equations spreadsheet .","code":"library(ma206equations) ggplot() +    stamp_dbinom(single_trial_prob = 1/6,                 num_trials = 10) +    # from ma206distributions   scale_x_counting()  +   stamp_eq_binomial(x = 7,                      y = .25,                     size = 8) +   stamp_eq_choose(x = 7, y = .2,                    size = 3, color = \"black\")"},{"path":[]},{"path":"https://evamaerey.github.io/ma206distributions/index.html","id":"tidy_dgeometric","dir":"","previous_headings":"Functions to engage with the geometric distribution","what":"tidy_dgeometric","title":"Functionality for intro probability curricula","text":"Similarly, geometric distributions might delivered data frame. Currently, students might use base R function dgeom() answer question probability trial first success observed series trials. example: Given probability free throw success 2/3 given player, probability ’ll see first success upon third attempt? Currently, students might answer question using R calculate quantity. However, quantity returned lacks context. ma206distributions package provides function instead deliver data frame attempt index probability paired follows: 🤔 🚧 single_trial_prob columns appropriately stored meta data? best ? Source code least switch order columns. Students can focus information question, also see sits context larger probability distribution. [geometric distribution, noted complete distribution displayed ‘support’ infinite; theoretically wait forever first success.] Students can easily feed data frame produced tidy_dgeometric() visualization software. function theme_axis_x_truncated helps us communicate aren’t visualizing full distribution (extends infinity).  🤔 inconsistent naming, abbreviating binom geom, geometric? kind motivated use ‘geom’ ggplot2 totally different sense. ? 🤔 🚧 think inconsistent geometric distribution ma206equations ma206distributions. can either count last failure first success. function stamp_dgeometric also exists shortcut displaying distribution.","code":"dgeom(x = 3-1, prob = 2/3) [1] 0.0741 library(ma206distributions) tidy_dgeometric(single_trial_prob = 2/3,                  num_attempts = 5) # A tibble: 5 × 4      observed_attempt single_trial_prob probability cumulative_prob                 <int>             <dbl>       <dbl>           <dbl>    1                1             0.667     0.667             0.667    2                2             0.667     0.222             0.889    3                3             0.667     0.0741            0.963    4                4             0.667     0.0247            0.988    5                5             0.667     0.00823           0.996 library(ma206distributions) library(tidyverse) tidy_dgeometric(single_trial_prob = 2/3, num_attempts = 5) %>%   # from ma206distributions   ggplot() +    aes(x = observed_attempt,        y = probability) +    geom_lollipop(annotate = T) +           # from ma206distributions   scale_x_counting()  +                        # from ma206distributions   labs(title = \"Basketball hot shot: \\nProbability that we'll see the first shot made only observed upon attempt 1, 2, 3, 4 ...\",        subtitle = \"The probability of a success in individual shot is 2/3\") +    theme_axis_x_truncated() +    stamp_eq_geometric(x = 4, y = .45) ggplot() +    stamp_dgeometric(single_prob = 1/3,                     num_attempts = 9) +    scale_x_counting() +    theme_axis_x_truncated()"},{"path":[]},{"path":"https://evamaerey.github.io/ma206distributions/index.html","id":"3-tidying-data-from-discrete-random-variable-probability-problems","dir":"","previous_headings":"","what":"3. Tidying data from discrete random variable probability problems","title":"Functionality for intro probability curricula","text":"Tidying data important data inputted R coding language. process ‘tidying’ data creates well-organized structured format easier data analysis visualization. Probability tables often communicated ‘untidy’, wide forms easily ingested statistical software. (another example: http://www.stat.yale.edu/Courses/1997-98/101/ranvar.htm#:~:text=%20discrete%20random%20variable%20is,%20it%20must%20be%20discrete) example, table provided probability problem spinning wheel pie sectors various prize award amounts: spin-wheel might look like :  get data tidy, ready--use form, transposed table wide long variable columns column headers inform us content. way, row forms observation, case event type. spinning prize wheel three outcomes based sector type wheel landed : prize, win $1, win $3. added numeric column ‘payout’ makes data easier use mathematical standpoint. tidied data. 🚧 [insert link tidy data paper] package include data structured way object called prize_wheel: Give data tidied, can easily visualize joint distribution payout frequency using ggplot2 tool already used heavily statistics part class. function geom_fulcrum can used visualize balancing point data, also expected value. using stamp_eq_expected_value, stamp_eq_variance, stamp_eq_standard_deviation, can relay mathematical formula’s computing quantities distribution.","code":"library(ma206distributions) print(prize_wheel) sector_type frequency payout    1    No Prize         9      0    2      Win $1         1      1    3      Win $3         2      3 library(tidyverse) prize_wheel %>%    ggplot() +    aes(x = payout) +    aes(y = frequency) +   geom_lollipop() last_plot() +   aes(weight = frequency) +   geom_fulcrum(color = \"red\",                 shape = 2, size = 5) +    stamp_eq_expected_value(x = 2, y = 7) +    stamp_eq_variance(x = 2, y = 6) +   stamp_eq_standard_deviation(x = 2, y = 5)"},{"path":"https://evamaerey.github.io/ma206distributions/index.html","id":"a-comparison-with-the-status-quo","dir":"","previous_headings":"","what":"A comparison with the status quo","title":"Functionality for intro probability curricula","text":"following code might use ma206distributions ma206equations functions used. equations plot produce following fashion (functions package pre-built): {{_N}C{_k}} * pkq{N-k}  detail interested: Another possibility using stat_function() function ggplot2 produce visualizations binomial distribution. , show can visualize binomial distribution 20 trials .2 probability success trial. Using stat_function() carefully, can get similar outcome. However, lot coordination ’s required: 20 shows three times construction example xlim(); n = 21 (20 + 1 possible outcomes); finally args list. Producing plot requires lot foreknowledge. alternative strategies, (delivering data frames stamps), hope give students something can produce easily, conversation distribution form .","code":"library(tidyverse)  latex2exp::TeX(\"${{_N}C{_k}} \\\\cdot p^kq^{N-k}$\") LaTeX: ${{_N}C{_k}} \\cdot p^kq^{N-k}$     plotmath: {{{}[N]}*C * {{}[k]}} %.% p^{k}*q^{N - k} single_trial_prob <- .5 num_trials <- 10  0:num_trials ->   possible_outcomes   dbinom(x = possible_outcomes,        size = 10,        prob = single_trial_prob) ->   probs  tibble(possible_outcomes, probs) %>%   ggplot() +   aes(x = possible_outcomes) +   scale_x_continuous(breaks = possible_outcomes) +   aes(y = probs) +   geom_point(fill = \"white\") +   aes(xend = possible_outcomes,       yend = 0) +   geom_segment() +   labs(subtitle = \"Course idea #0: For multiple trials, the probability of a certain number of successes...\" %>%          str_wrap(60),        x = \"Number of Successes in 10 trials\",        y = \"Probability\") +   geom_text(aes(label = probs %>% round(4)),             nudge_y = .01) +      annotate(geom = \"text\",     x = 1.5,     y = .2,     label = \"{{{}[N]}*C * {{}[k]}} %.% p^{k}*q^{N - k}\",     parse = TRUE,     size = 5) -> binomial_distribution  binomial_distribution library(ggplot2) ggplot() +    xlim(0, 20) +   stat_function(fun = dbinom,                 geom = \"point\",                  n = 21,                 args = list(size = 20, prob = .2)) +    labs(y = \"Probability\") +    labs(x = \"Number of successes in 20 trials\") +    labs(title = \"Given 20 trials where the probability for success in a single\\n trial is .2, what are the probabilities for each possible\\nnumber of observed successes \")"},{"path":"https://evamaerey.github.io/ma206distributions/index.html","id":"browse-functions","dir":"","previous_headings":"","what":"Browse functions","title":"Functionality for intro probability curricula","text":"https://evamaerey.github.io/ma206distributions/reference/index.html https://evamaerey.github.io/ma206equations/reference/index.html","code":""},{"path":"https://evamaerey.github.io/ma206distributions/index.html","id":"visualizing-a-discrete-random-variable-without-ma206distributions-functions","dir":"","previous_headings":"","what":"Visualizing a Discrete Random Variable without {ma206distributions} functions","title":"Functionality for intro probability curricula","text":"Probability problems structured data frames visualized tools used stats part class.  contrasts expressive fluid experience delivered ma206equations ma206distribution functions:","code":"tibble(event = c(\"totaled\", \"fender bender\", \"accident free\"),        probability = c(.01, .09, .9),        payout = c(20000, 5000, 0)) -> expected  plotmath_ev <- latex2exp::TeX(\"$E[X] = x_1p_1 + x_2p_2 + x_3p_3 ...x_np_n = \\\\sum_1^n{x_ip_i}$\")  plotmath_var <- latex2exp::TeX(\"$Var(X) = E[(X-\\\\mu)^2] = \\\\sigma^2_x = \\\\sum_1^n(x_i-\\\\mu)^2p_i$\")  plotmath_sd <- latex2exp::TeX(\"$\\\\sigma_x = SD(X) = \\\\sqrt{Var(X)}$\")   expected %>%    ggplot() +    aes(x = payout, y = probability) +    geom_point() +    geom_segment(aes(xend = payout, yend = 0)) +    geom_text(aes(label = probability), size = 5,              vjust = -.5, color = \"black\") +    annotate(geom = \"point\", x = sum(c(.01*20000, .09*5000)),             y = 0, size = 4, shape = 2) +    geom_vline(xintercept = sum(c(.01*20000, .09*5000)),              linetype = \"dashed\", color = \"black\") +    annotate(geom = \"label\", x =sum(c(.01*20000, .09*5000)), label = sum(c(.01*20000, .09*5000)), y = .5 ) +    scale_y_continuous(limits = c(0,1)) +    annotate(geom = \"text\", label = plotmath_ev, parse = T,            x = 12000, y = .95) +   annotate(geom = \"text\", label = plotmath_var, parse = T,            x = 12000, y = .8) +     annotate(geom = \"text\", label = plotmath_sd, parse = T,            x = 12000, y = .65) -> discrete_random  discrete_random expected %>%    ggplot() +    aes(x = payout, y = probability) +    geom_lollipop() +   geom_fulcrum(aes(weight = probability),                size = 4, shape = 2) +    stamp_eq_expected_value(x = 12000, y = .95) +   stamp_eq_variance(x = 12000, y = .8) +    stamp_eq_standard_deviation(x = 12000, y = .65)"},{"path":"https://evamaerey.github.io/ma206distributions/index.html","id":"project-timeline","dir":"","previous_headings":"","what":"Functionality for intro probability curricula","title":"Functionality for intro probability curricula","text":"See also: learning materials: https://github.com/EvaMaeRey/ay_2023_2_advanced_individual_study sibling project: https://github.com/EvaMaeRey/ma206equations See also: https://evamaerey.github.io/mytidytuesday/2022-08-01-dbinom-dgeom/dbinom_dgeom.html https://evamaerey.github.io/mytidytuesday/2022-08-01-dbinom-dgeom/dbinom_dgeom_flipbook.html","code":""},{"path":[]},{"path":[]},{"path":"https://evamaerey.github.io/ma206distributions/index.html","id":"how-do-we-bundle-up-related-functions-packages","dir":"","previous_headings":"","what":"How do we bundle up related functions? Packages.","title":"Functionality for intro probability curricula","text":"still follow steps outlined data package readme: https://github.com/EvaMaeRey/tidytitanic well consult package building guide: https://evamaerey.github.io/package_in_20_minutes/package_in_20_minutes","code":""},{"path":"https://evamaerey.github.io/ma206distributions/index.html","id":"how-do-we-collaborate-and-share-the-package-version-control","dir":"","previous_headings":"","what":"How do we collaborate and share the package? Version Control…","title":"Functionality for intro probability curricula","text":"create github account collaboration https://github.com/ ’ll make repository available account","code":"# tibble(baby = 1:4) %>%  #  crossing(tibble(mom = 1:4)) %>%  #  mutate(match = baby == mom) %>%  #  ggplot() +  #   aes(fill = match) + aes(x = baby) + aes(y = mom) +  #   geom_tile()"},{"path":"https://evamaerey.github.io/ma206distributions/reference/bernoulli_trial.html","id":null,"dir":"Reference","previous_headings":"","what":"Title — bernoulli_trial","title":"Title — bernoulli_trial","text":"Title","code":""},{"path":"https://evamaerey.github.io/ma206distributions/reference/bernoulli_trial.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Title — bernoulli_trial","text":"","code":"bernoulli_trial(prob = 0.25)"},{"path":"https://evamaerey.github.io/ma206distributions/reference/bernoulli_trial.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Title — bernoulli_trial","text":"prob","code":""},{"path":"https://evamaerey.github.io/ma206distributions/reference/bernoulli_trial.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Title — bernoulli_trial","text":"","code":"bernoulli_trial() #> # A tibble: 2 × 2 #>   outcome  prob #>     <int> <dbl> #> 1       0  0.75 #> 2       1  0.25 bernoulli_trial(.666) #> # A tibble: 2 × 2 #>   outcome  prob #>     <int> <dbl> #> 1       0 0.334 #> 2       1 0.666"},{"path":"https://evamaerey.github.io/ma206distributions/reference/cross_trials.html","id":null,"dir":"Reference","previous_headings":"","what":"Title — cross_trials","title":"Title — cross_trials","text":"Title","code":""},{"path":"https://evamaerey.github.io/ma206distributions/reference/cross_trials.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Title — cross_trials","text":"","code":"cross_trials(trial = prize_wheel, num_trials = 2)"},{"path":"https://evamaerey.github.io/ma206distributions/reference/cross_trials.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Title — cross_trials","text":"num_trials","code":""},{"path":"https://evamaerey.github.io/ma206distributions/reference/cross_trials.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Title — cross_trials","text":"","code":"library(dplyr) #>  #> Attaching package: ‘dplyr’ #> The following objects are masked from ‘package:stats’: #>  #>     filter, lag #> The following objects are masked from ‘package:base’: #>  #>     intersect, setdiff, setequal, union prize_wheel |>    mutate(prob = frequency/sum(frequency)) |>    cross_trials(num_trials = 2) #> # A tibble: 9 × 8 #>   t1_sector_type t1_frequency t1_payout t1_prob t2_sec…¹ t2_fr…² t2_pa…³ t2_prob #>   <fct>                 <int>     <int>   <dbl> <fct>      <int>   <int>   <dbl> #> 1 No Prize                  9         0  0.75   No Prize       9       0  0.75   #> 2 No Prize                  9         0  0.75   Win $1         1       1  0.0833 #> 3 No Prize                  9         0  0.75   Win $3         2       3  0.167  #> 4 Win $1                    1         1  0.0833 No Prize       9       0  0.75   #> 5 Win $1                    1         1  0.0833 Win $1         1       1  0.0833 #> 6 Win $1                    1         1  0.0833 Win $3         2       3  0.167  #> 7 Win $3                    2         3  0.167  No Prize       9       0  0.75   #> 8 Win $3                    2         3  0.167  Win $1         1       1  0.0833 #> 9 Win $3                    2         3  0.167  Win $3         2       3  0.167  #> # … with abbreviated variable names ¹​t2_sector_type, ²​t2_frequency, ³​t2_payout  bernoulli_trial(.1) %>% cross_trials(num_trials = 3) #> # A tibble: 8 × 6 #>   t1_outcome t1_prob t2_outcome t2_prob t3_outcome t3_prob #>        <int>   <dbl>      <int>   <dbl>      <int>   <dbl> #> 1          0     0.9          0     0.9          0     0.9 #> 2          0     0.9          0     0.9          1     0.1 #> 3          0     0.9          1     0.1          0     0.9 #> 4          0     0.9          1     0.1          1     0.1 #> 5          1     0.1          0     0.9          0     0.9 #> 6          1     0.1          0     0.9          1     0.1 #> 7          1     0.1          1     0.1          0     0.9 #> 8          1     0.1          1     0.1          1     0.1"},{"path":"https://evamaerey.github.io/ma206distributions/reference/geom_fulcrum.html","id":null,"dir":"Reference","previous_headings":"","what":"Fulcrum geom — geom_fulcrum","title":"Fulcrum geom — geom_fulcrum","text":"geom_fulcrum() sits x axis balancing point data.","code":""},{"path":"https://evamaerey.github.io/ma206distributions/reference/geom_fulcrum.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fulcrum geom — geom_fulcrum","text":"","code":"geom_fulcrum(   mapping = NULL,   data = NULL,   position = \"identity\",   na.rm = FALSE,   show.legend = NA,   inherit.aes = TRUE,   ... )"},{"path":"https://evamaerey.github.io/ma206distributions/reference/geom_fulcrum.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fulcrum geom — geom_fulcrum","text":"geom layer sits balancing point data based x optionally weight","code":""},{"path":"https://evamaerey.github.io/ma206distributions/reference/geom_fulcrum.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fulcrum geom — geom_fulcrum","text":"","code":"library(ggplot2) ggplot(data = prize_wheel) + aes(x = payout, y = frequency, weight = frequency) + geom_lollipop() + geom_fulcrum(color = \"red\", shape = 2, size = 5)   library(ggplot2) ggplot(data = cars) + aes(x = speed, y = dist) + geom_point() + geom_rug() + geom_fulcrum(color = \"red\", shape = 2, size = 5)"},{"path":"https://evamaerey.github.io/ma206distributions/reference/geom_lollipop.html","id":null,"dir":"Reference","previous_headings":"","what":"Lollipop geom — geom_lollipop","title":"Lollipop geom — geom_lollipop","text":"lollipop often used attractively communicate discrete quantitative distributions.","code":""},{"path":"https://evamaerey.github.io/ma206distributions/reference/geom_lollipop.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Lollipop geom — geom_lollipop","text":"","code":"geom_lollipop(annotate = FALSE, ...)"},{"path":"https://evamaerey.github.io/ma206distributions/reference/geom_lollipop.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Lollipop geom — geom_lollipop","text":"ggplot geom layer","code":""},{"path":"https://evamaerey.github.io/ma206distributions/reference/geom_lollipop.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Lollipop geom — geom_lollipop","text":"","code":"library(ggplot2) ggplot(data = prize_wheel) + aes(x = payout, y = frequency) + geom_lollipop()   library(ggplot2) ggplot(data = prize_wheel) + aes(x = payout, y = frequency) + geom_lollipop(annotate = TRUE)"},{"path":"https://evamaerey.github.io/ma206distributions/reference/geom_post.html","id":null,"dir":"Reference","previous_headings":"","what":"Post geom — geom_post","title":"Post geom — geom_post","text":"geom_post() may used visualize discrete quantitative distributions","code":""},{"path":"https://evamaerey.github.io/ma206distributions/reference/geom_post.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Post geom — geom_post","text":"","code":"geom_post(   mapping = NULL,   data = NULL,   position = \"identity\",   na.rm = FALSE,   show.legend = NA,   inherit.aes = TRUE,   ... )"},{"path":"https://evamaerey.github.io/ma206distributions/reference/geom_post.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Post geom — geom_post","text":"ggplot2 geom layer","code":""},{"path":"https://evamaerey.github.io/ma206distributions/reference/geom_post.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Post geom — geom_post","text":"","code":"library(ggplot2) ggplot(data = prize_wheel) + aes(x = payout, y = frequency) + geom_post()"},{"path":"https://evamaerey.github.io/ma206distributions/reference/geom_post_label.html","id":null,"dir":"Reference","previous_headings":"","what":"Post geom — geom_post_label","title":"Post geom — geom_post_label","text":"geom_post() may used visualize discrete quantitative distributions","code":""},{"path":"https://evamaerey.github.io/ma206distributions/reference/geom_post_label.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Post geom — geom_post_label","text":"","code":"geom_post_label(   mapping = NULL,   data = NULL,   position = \"identity\",   na.rm = FALSE,   show.legend = NA,   inherit.aes = TRUE,   vjust = -0.6,   ... )"},{"path":"https://evamaerey.github.io/ma206distributions/reference/geom_post_label.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Post geom — geom_post_label","text":"ggplot2 geom layer","code":""},{"path":"https://evamaerey.github.io/ma206distributions/reference/geom_post_label.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Post geom — geom_post_label","text":"","code":"library(ggplot2) ggplot(data = prize_wheel) + aes(x = payout, y = frequency) + geom_post() + geom_post_label()   tidy_dbinom(single_trial_prob = 1/6, num_trials = 10) %>%   # from ma206distributions ggplot() +  aes(x = num_successes,      y = probability) +  geom_lollipop(annotate = TRUE,                round_digits = 2) +                            # from ma206distributions  scale_x_counting()                 # from ma206distributions #> Warning: Ignoring unknown parameters: `round_digits` #> Warning: Ignoring unknown parameters: `round_digits`"},{"path":"https://evamaerey.github.io/ma206distributions/reference/geom_segment_sd.html","id":null,"dir":"Reference","previous_headings":"","what":"Title — geom_segment_sd","title":"Title — geom_segment_sd","text":"Title","code":""},{"path":"https://evamaerey.github.io/ma206distributions/reference/geom_segment_sd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Title — geom_segment_sd","text":"","code":"geom_segment_sd(   mapping = NULL,   data = NULL,   position = \"identity\",   na.rm = FALSE,   show.legend = NA,   inherit.aes = TRUE,   ... )"},{"path":"https://evamaerey.github.io/ma206distributions/reference/geom_segment_sd.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Title — geom_segment_sd","text":"","code":"library(ggplot2) ggplot(cars) + aes(x = speed, y = dist) + geom_point() + geom_fulcrum(color = \"red\", shape = 2, size = 5) + geom_segment_sd(color = \"red\", linewidth = 3)"},{"path":"https://evamaerey.github.io/ma206distributions/reference/good_digits.html","id":null,"dir":"Reference","previous_headings":"","what":"Title — good_digits","title":"Title — good_digits","text":"Title","code":""},{"path":"https://evamaerey.github.io/ma206distributions/reference/good_digits.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Title — good_digits","text":"","code":"good_digits(x, digits = 3)"},{"path":"https://evamaerey.github.io/ma206distributions/reference/good_digits.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Title — good_digits","text":"digits","code":""},{"path":"https://evamaerey.github.io/ma206distributions/reference/good_digits.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Title — good_digits","text":"","code":"good_digits(x = .8999, digits = 2) #> [1] \"0.90\""},{"path":"https://evamaerey.github.io/ma206distributions/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"https://evamaerey.github.io/ma206distributions/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"https://evamaerey.github.io/ma206distributions/reference/pipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pipe operator — %>%","text":"lhs value magrittr placeholder. rhs function call using magrittr semantics.","code":""},{"path":"https://evamaerey.github.io/ma206distributions/reference/pipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pipe operator — %>%","text":"result calling rhs(lhs).","code":""},{"path":"https://evamaerey.github.io/ma206distributions/reference/prize_wheel.html","id":null,"dir":"Reference","previous_headings":"","what":"Example problem data — prize_wheel","title":"Example problem data — prize_wheel","text":"Data chapter 11 MA206's text book","code":""},{"path":"https://evamaerey.github.io/ma206distributions/reference/prize_wheel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example problem data — prize_wheel","text":"","code":"prize_wheel"},{"path":[]},{"path":"https://evamaerey.github.io/ma206distributions/reference/prize_wheel.html","id":"prize-wheel","dir":"Reference","previous_headings":"","what":"prize_wheel","title":"Example problem data — prize_wheel","text":"data frame 3 rows 3 columns: sector_type type pie slice prize wheel frequency proportion pie slice type payout much paid case landing slice","code":""},{"path":[]},{"path":"https://evamaerey.github.io/ma206distributions/reference/prize_wheel.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Example problem data — prize_wheel","text":"","code":"prize_wheel #>   sector_type frequency payout #> 1    No Prize         9      0 #> 2      Win $1         1      1 #> 3      Win $3         2      3  library(ggplot2) ggplot(prize_wheel) +     aes(x = payout, y = frequency) +     geom_lollipop()   prize_wheel %>%   merge(prize_wheel, by = NULL) %>%   merge(prize_wheel, by = NULL) %>%   merge(prize_wheel, by = NULL) #>    sector_type.x frequency.x payout.x sector_type.y frequency.y payout.y #> 1       No Prize           9        0      No Prize           9        0 #> 2         Win $1           1        1      No Prize           9        0 #> 3         Win $3           2        3      No Prize           9        0 #> 4       No Prize           9        0        Win $1           1        1 #> 5         Win $1           1        1        Win $1           1        1 #> 6         Win $3           2        3        Win $1           1        1 #> 7       No Prize           9        0        Win $3           2        3 #> 8         Win $1           1        1        Win $3           2        3 #> 9         Win $3           2        3        Win $3           2        3 #> 10      No Prize           9        0      No Prize           9        0 #> 11        Win $1           1        1      No Prize           9        0 #> 12        Win $3           2        3      No Prize           9        0 #> 13      No Prize           9        0        Win $1           1        1 #> 14        Win $1           1        1        Win $1           1        1 #> 15        Win $3           2        3        Win $1           1        1 #> 16      No Prize           9        0        Win $3           2        3 #> 17        Win $1           1        1        Win $3           2        3 #> 18        Win $3           2        3        Win $3           2        3 #> 19      No Prize           9        0      No Prize           9        0 #> 20        Win $1           1        1      No Prize           9        0 #> 21        Win $3           2        3      No Prize           9        0 #> 22      No Prize           9        0        Win $1           1        1 #> 23        Win $1           1        1        Win $1           1        1 #> 24        Win $3           2        3        Win $1           1        1 #> 25      No Prize           9        0        Win $3           2        3 #> 26        Win $1           1        1        Win $3           2        3 #> 27        Win $3           2        3        Win $3           2        3 #> 28      No Prize           9        0      No Prize           9        0 #> 29        Win $1           1        1      No Prize           9        0 #> 30        Win $3           2        3      No Prize           9        0 #> 31      No Prize           9        0        Win $1           1        1 #> 32        Win $1           1        1        Win $1           1        1 #> 33        Win $3           2        3        Win $1           1        1 #> 34      No Prize           9        0        Win $3           2        3 #> 35        Win $1           1        1        Win $3           2        3 #> 36        Win $3           2        3        Win $3           2        3 #> 37      No Prize           9        0      No Prize           9        0 #> 38        Win $1           1        1      No Prize           9        0 #> 39        Win $3           2        3      No Prize           9        0 #> 40      No Prize           9        0        Win $1           1        1 #> 41        Win $1           1        1        Win $1           1        1 #> 42        Win $3           2        3        Win $1           1        1 #> 43      No Prize           9        0        Win $3           2        3 #> 44        Win $1           1        1        Win $3           2        3 #> 45        Win $3           2        3        Win $3           2        3 #> 46      No Prize           9        0      No Prize           9        0 #> 47        Win $1           1        1      No Prize           9        0 #> 48        Win $3           2        3      No Prize           9        0 #> 49      No Prize           9        0        Win $1           1        1 #> 50        Win $1           1        1        Win $1           1        1 #> 51        Win $3           2        3        Win $1           1        1 #> 52      No Prize           9        0        Win $3           2        3 #> 53        Win $1           1        1        Win $3           2        3 #> 54        Win $3           2        3        Win $3           2        3 #> 55      No Prize           9        0      No Prize           9        0 #> 56        Win $1           1        1      No Prize           9        0 #> 57        Win $3           2        3      No Prize           9        0 #> 58      No Prize           9        0        Win $1           1        1 #> 59        Win $1           1        1        Win $1           1        1 #> 60        Win $3           2        3        Win $1           1        1 #> 61      No Prize           9        0        Win $3           2        3 #> 62        Win $1           1        1        Win $3           2        3 #> 63        Win $3           2        3        Win $3           2        3 #> 64      No Prize           9        0      No Prize           9        0 #> 65        Win $1           1        1      No Prize           9        0 #> 66        Win $3           2        3      No Prize           9        0 #> 67      No Prize           9        0        Win $1           1        1 #> 68        Win $1           1        1        Win $1           1        1 #> 69        Win $3           2        3        Win $1           1        1 #> 70      No Prize           9        0        Win $3           2        3 #> 71        Win $1           1        1        Win $3           2        3 #> 72        Win $3           2        3        Win $3           2        3 #> 73      No Prize           9        0      No Prize           9        0 #> 74        Win $1           1        1      No Prize           9        0 #> 75        Win $3           2        3      No Prize           9        0 #> 76      No Prize           9        0        Win $1           1        1 #> 77        Win $1           1        1        Win $1           1        1 #> 78        Win $3           2        3        Win $1           1        1 #> 79      No Prize           9        0        Win $3           2        3 #> 80        Win $1           1        1        Win $3           2        3 #> 81        Win $3           2        3        Win $3           2        3 #>    sector_type.x frequency.x payout.x sector_type.y frequency.y payout.y #> 1       No Prize           9        0      No Prize           9        0 #> 2       No Prize           9        0      No Prize           9        0 #> 3       No Prize           9        0      No Prize           9        0 #> 4       No Prize           9        0      No Prize           9        0 #> 5       No Prize           9        0      No Prize           9        0 #> 6       No Prize           9        0      No Prize           9        0 #> 7       No Prize           9        0      No Prize           9        0 #> 8       No Prize           9        0      No Prize           9        0 #> 9       No Prize           9        0      No Prize           9        0 #> 10        Win $1           1        1      No Prize           9        0 #> 11        Win $1           1        1      No Prize           9        0 #> 12        Win $1           1        1      No Prize           9        0 #> 13        Win $1           1        1      No Prize           9        0 #> 14        Win $1           1        1      No Prize           9        0 #> 15        Win $1           1        1      No Prize           9        0 #> 16        Win $1           1        1      No Prize           9        0 #> 17        Win $1           1        1      No Prize           9        0 #> 18        Win $1           1        1      No Prize           9        0 #> 19        Win $3           2        3      No Prize           9        0 #> 20        Win $3           2        3      No Prize           9        0 #> 21        Win $3           2        3      No Prize           9        0 #> 22        Win $3           2        3      No Prize           9        0 #> 23        Win $3           2        3      No Prize           9        0 #> 24        Win $3           2        3      No Prize           9        0 #> 25        Win $3           2        3      No Prize           9        0 #> 26        Win $3           2        3      No Prize           9        0 #> 27        Win $3           2        3      No Prize           9        0 #> 28      No Prize           9        0        Win $1           1        1 #> 29      No Prize           9        0        Win $1           1        1 #> 30      No Prize           9        0        Win $1           1        1 #> 31      No Prize           9        0        Win $1           1        1 #> 32      No Prize           9        0        Win $1           1        1 #> 33      No Prize           9        0        Win $1           1        1 #> 34      No Prize           9        0        Win $1           1        1 #> 35      No Prize           9        0        Win $1           1        1 #> 36      No Prize           9        0        Win $1           1        1 #> 37        Win $1           1        1        Win $1           1        1 #> 38        Win $1           1        1        Win $1           1        1 #> 39        Win $1           1        1        Win $1           1        1 #> 40        Win $1           1        1        Win $1           1        1 #> 41        Win $1           1        1        Win $1           1        1 #> 42        Win $1           1        1        Win $1           1        1 #> 43        Win $1           1        1        Win $1           1        1 #> 44        Win $1           1        1        Win $1           1        1 #> 45        Win $1           1        1        Win $1           1        1 #> 46        Win $3           2        3        Win $1           1        1 #> 47        Win $3           2        3        Win $1           1        1 #> 48        Win $3           2        3        Win $1           1        1 #> 49        Win $3           2        3        Win $1           1        1 #> 50        Win $3           2        3        Win $1           1        1 #> 51        Win $3           2        3        Win $1           1        1 #> 52        Win $3           2        3        Win $1           1        1 #> 53        Win $3           2        3        Win $1           1        1 #> 54        Win $3           2        3        Win $1           1        1 #> 55      No Prize           9        0        Win $3           2        3 #> 56      No Prize           9        0        Win $3           2        3 #> 57      No Prize           9        0        Win $3           2        3 #> 58      No Prize           9        0        Win $3           2        3 #> 59      No Prize           9        0        Win $3           2        3 #> 60      No Prize           9        0        Win $3           2        3 #> 61      No Prize           9        0        Win $3           2        3 #> 62      No Prize           9        0        Win $3           2        3 #> 63      No Prize           9        0        Win $3           2        3 #> 64        Win $1           1        1        Win $3           2        3 #> 65        Win $1           1        1        Win $3           2        3 #> 66        Win $1           1        1        Win $3           2        3 #> 67        Win $1           1        1        Win $3           2        3 #> 68        Win $1           1        1        Win $3           2        3 #> 69        Win $1           1        1        Win $3           2        3 #> 70        Win $1           1        1        Win $3           2        3 #> 71        Win $1           1        1        Win $3           2        3 #> 72        Win $1           1        1        Win $3           2        3 #> 73        Win $3           2        3        Win $3           2        3 #> 74        Win $3           2        3        Win $3           2        3 #> 75        Win $3           2        3        Win $3           2        3 #> 76        Win $3           2        3        Win $3           2        3 #> 77        Win $3           2        3        Win $3           2        3 #> 78        Win $3           2        3        Win $3           2        3 #> 79        Win $3           2        3        Win $3           2        3 #> 80        Win $3           2        3        Win $3           2        3 #> 81        Win $3           2        3        Win $3           2        3"},{"path":"https://evamaerey.github.io/ma206distributions/reference/scale_x_counting.html","id":null,"dir":"Reference","previous_headings":"","what":"scale_x_counting — scale_x_counting","title":"scale_x_counting — scale_x_counting","text":"Show x axis guides ticks integers","code":""},{"path":"https://evamaerey.github.io/ma206distributions/reference/scale_x_counting.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"scale_x_counting — scale_x_counting","text":"","code":"scale_x_counting(breaks = 0:10000, ...)"},{"path":"https://evamaerey.github.io/ma206distributions/reference/scale_x_counting.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"scale_x_counting — scale_x_counting","text":"breaks numeric vector breaks placed ...","code":""},{"path":"https://evamaerey.github.io/ma206distributions/reference/scale_x_counting.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"scale_x_counting — scale_x_counting","text":"ggplot2 scale function","code":""},{"path":"https://evamaerey.github.io/ma206distributions/reference/scale_x_counting.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"scale_x_counting — scale_x_counting","text":"","code":"library(ggplot2) ggplot(tidy_dbinom(1/6, num_trials = 8)) +   aes(x = num_successes) +   scale_x_counting() +   aes(y = probability) +   geom_lollipop()"},{"path":"https://evamaerey.github.io/ma206distributions/reference/stamp_dbinom.html","id":null,"dir":"Reference","previous_headings":"","what":"stamp_dbinom — stamp_dbinom","title":"stamp_dbinom — stamp_dbinom","text":"stamp_dbinom returns plot plots number successes probabilities given probability single trial total number trials.","code":""},{"path":"https://evamaerey.github.io/ma206distributions/reference/stamp_dbinom.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"stamp_dbinom — stamp_dbinom","text":"","code":"stamp_dbinom(single_trial_prob = 0.5, num_trials = 10, annotate = FALSE)"},{"path":"https://evamaerey.github.io/ma206distributions/reference/stamp_dbinom.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"stamp_dbinom — stamp_dbinom","text":"single_trial_prob numeric value 0 1 num_trials positive integer total number trials","code":""},{"path":"https://evamaerey.github.io/ma206distributions/reference/stamp_dbinom.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"stamp_dbinom — stamp_dbinom","text":"plot plots number success associated probabilities","code":""},{"path":"https://evamaerey.github.io/ma206distributions/reference/stamp_dbinom.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"stamp_dbinom — stamp_dbinom","text":"","code":"library(ggplot2) ggplot() + stamp_dbinom()   ggplot() + stamp_dbinom(single_trial_prob = 1/12, num_trials = 3, annotate=TRUE)"},{"path":"https://evamaerey.github.io/ma206distributions/reference/stamp_dgeometric.html","id":null,"dir":"Reference","previous_headings":"","what":"Title — stamp_dgeometric","title":"Title — stamp_dgeometric","text":"Title","code":""},{"path":"https://evamaerey.github.io/ma206distributions/reference/stamp_dgeometric.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Title — stamp_dgeometric","text":"","code":"stamp_dgeometric(single_prob = 0.5, num_attempts = 10, annotate = FALSE)"},{"path":"https://evamaerey.github.io/ma206distributions/reference/stamp_dgeometric.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Title — stamp_dgeometric","text":"num_attempts","code":""},{"path":"https://evamaerey.github.io/ma206distributions/reference/stamp_dgeometric.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Title — stamp_dgeometric","text":"","code":"library(ggplot2) ggplot() + stamp_dgeometric()"},{"path":"https://evamaerey.github.io/ma206distributions/reference/theme_axis_x_censored.html","id":null,"dir":"Reference","previous_headings":"","what":"theme_axis_x_censored — theme_axis_x_censored","title":"theme_axis_x_censored — theme_axis_x_censored","text":"Show x axis guides ticks integers","code":""},{"path":"https://evamaerey.github.io/ma206distributions/reference/theme_axis_x_censored.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"theme_axis_x_censored — theme_axis_x_censored","text":"","code":"theme_axis_x_censored()"},{"path":"https://evamaerey.github.io/ma206distributions/reference/theme_axis_x_censored.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"theme_axis_x_censored — theme_axis_x_censored","text":"breaks numeric vector breaks placed ...","code":""},{"path":"https://evamaerey.github.io/ma206distributions/reference/theme_axis_x_censored.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"theme_axis_x_censored — theme_axis_x_censored","text":"ggplot2 theme function indicate x right censored","code":""},{"path":"https://evamaerey.github.io/ma206distributions/reference/theme_axis_x_censored.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"theme_axis_x_censored — theme_axis_x_censored","text":"","code":"library(ggplot2) ggplot(tidy_dbinom(1/6, num_trials = 8)) +   aes(x = num_successes) +   scale_x_counting() +   aes(y = probability) +   geom_lollipop() +   theme_axis_x_censored()"},{"path":"https://evamaerey.github.io/ma206distributions/reference/theme_axis_x_truncated.html","id":null,"dir":"Reference","previous_headings":"","what":"theme_axis_x_truncated — theme_axis_x_truncated","title":"theme_axis_x_truncated — theme_axis_x_truncated","text":"Show x axis guides ticks integers","code":""},{"path":"https://evamaerey.github.io/ma206distributions/reference/theme_axis_x_truncated.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"theme_axis_x_truncated — theme_axis_x_truncated","text":"","code":"theme_axis_x_truncated()"},{"path":"https://evamaerey.github.io/ma206distributions/reference/theme_axis_x_truncated.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"theme_axis_x_truncated — theme_axis_x_truncated","text":"breaks numeric vector breaks placed ...","code":""},{"path":"https://evamaerey.github.io/ma206distributions/reference/theme_axis_x_truncated.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"theme_axis_x_truncated — theme_axis_x_truncated","text":"ggplot2 theme function indicate x right censored","code":""},{"path":"https://evamaerey.github.io/ma206distributions/reference/theme_axis_x_truncated.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"theme_axis_x_truncated — theme_axis_x_truncated","text":"","code":"library(ggplot2) ggplot(tidy_dbinom(1/6, num_trials = 8)) +   aes(x = num_successes) +   scale_x_counting() +   aes(y = probability) +   geom_lollipop() +   theme_axis_x_truncated()"},{"path":"https://evamaerey.github.io/ma206distributions/reference/tidy_dbinom.html","id":null,"dir":"Reference","previous_headings":"","what":"Tidy_dbinom returns a data table that pairs number of successes with probabilities given the probability of a single trial and the total number of trials. — tidy_dbinom","title":"Tidy_dbinom returns a data table that pairs number of successes with probabilities given the probability of a single trial and the total number of trials. — tidy_dbinom","text":"Tidy_dbinom returns data table pairs number successes probabilities given probability single trial total number trials.","code":""},{"path":"https://evamaerey.github.io/ma206distributions/reference/tidy_dbinom.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Tidy_dbinom returns a data table that pairs number of successes with probabilities given the probability of a single trial and the total number of trials. — tidy_dbinom","text":"","code":"tidy_dbinom(single_trial_prob = 0.5, num_trials = 10)"},{"path":"https://evamaerey.github.io/ma206distributions/reference/tidy_dbinom.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Tidy_dbinom returns a data table that pairs number of successes with probabilities given the probability of a single trial and the total number of trials. — tidy_dbinom","text":"single_trial_prob numeric value 0 1 num_trials positive integer total number trials","code":""},{"path":"https://evamaerey.github.io/ma206distributions/reference/tidy_dbinom.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Tidy_dbinom returns a data table that pairs number of successes with probabilities given the probability of a single trial and the total number of trials. — tidy_dbinom","text":"data frame pairing number successes probabilities.","code":""},{"path":"https://evamaerey.github.io/ma206distributions/reference/tidy_dbinom.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Tidy_dbinom returns a data table that pairs number of successes with probabilities given the probability of a single trial and the total number of trials. — tidy_dbinom","text":"","code":"tidy_dbinom(single_trial_prob = 1/6, num_trials = 4) #> # A tibble: 5 × 4 #>   num_successes probability single_trial_prob num_trials #>           <int>       <dbl>             <dbl>      <dbl> #> 1             0    0.482                0.167          4 #> 2             1    0.386                0.167          4 #> 3             2    0.116                0.167          4 #> 4             3    0.0154               0.167          4 #> 5             4    0.000772             0.167          4 tidy_dbinom(.5, 10) #> # A tibble: 11 × 4 #>    num_successes probability single_trial_prob num_trials #>            <int>       <dbl>             <dbl>      <dbl> #>  1             0    0.000977               0.5         10 #>  2             1    0.00977                0.5         10 #>  3             2    0.0439                 0.5         10 #>  4             3    0.117                  0.5         10 #>  5             4    0.205                  0.5         10 #>  6             5    0.246                  0.5         10 #>  7             6    0.205                  0.5         10 #>  8             7    0.117                  0.5         10 #>  9             8    0.0439                 0.5         10 #> 10             9    0.00977                0.5         10 #> 11            10    0.000977               0.5         10 tidy_dbinom(1/12, 3) #> # A tibble: 4 × 4 #>   num_successes probability single_trial_prob num_trials #>           <int>       <dbl>             <dbl>      <dbl> #> 1             0    0.770               0.0833          3 #> 2             1    0.210               0.0833          3 #> 3             2    0.0191              0.0833          3 #> 4             3    0.000579            0.0833          3 tidy_dbinom(.5, 20) #> # A tibble: 21 × 4 #>    num_successes probability single_trial_prob num_trials #>            <int>       <dbl>             <dbl>      <dbl> #>  1             0 0.000000954               0.5         20 #>  2             1 0.0000191                 0.5         20 #>  3             2 0.000181                  0.5         20 #>  4             3 0.00109                   0.5         20 #>  5             4 0.00462                   0.5         20 #>  6             5 0.0148                    0.5         20 #>  7             6 0.0370                    0.5         20 #>  8             7 0.0739                    0.5         20 #>  9             8 0.120                     0.5         20 #> 10             9 0.160                     0.5         20 #> # … with 11 more rows  library(ggplot2) ggplot(tidy_dbinom(1/6, num_trials = 8)) +   aes(x = num_successes) +   scale_x_counting() +   aes(y = probability) +   geom_lollipop()"},{"path":"https://evamaerey.github.io/ma206distributions/reference/tidy_dgeometric.html","id":null,"dir":"Reference","previous_headings":"","what":"Title — tidy_dgeometric","title":"Title — tidy_dgeometric","text":"Title","code":""},{"path":"https://evamaerey.github.io/ma206distributions/reference/tidy_dgeometric.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Title — tidy_dgeometric","text":"","code":"tidy_dgeometric(single_trial_prob = 0.5, num_attempts = 5)"},{"path":"https://evamaerey.github.io/ma206distributions/reference/tidy_dgeometric.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Title — tidy_dgeometric","text":"num_attempts","code":""},{"path":"https://evamaerey.github.io/ma206distributions/reference/tidy_dgeometric.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Title — tidy_dgeometric","text":"","code":"tidy_dgeometric() #> # A tibble: 5 × 4 #>   observed_attempt single_trial_prob probability cumulative_prob #>              <int>             <dbl>       <dbl>           <dbl> #> 1                1               0.5      0.5              0.5   #> 2                2               0.5      0.25             0.75  #> 3                3               0.5      0.125            0.875 #> 4                4               0.5      0.0625           0.938 #> 5                5               0.5      0.0312           0.969 tidy_dgeometric(single_trial_prob = 1/6, num_attempts = 10) #> # A tibble: 10 × 4 #>    observed_attempt single_trial_prob probability cumulative_prob #>               <int>             <dbl>       <dbl>           <dbl> #>  1                1             0.167      0.167            0.167 #>  2                2             0.167      0.139            0.306 #>  3                3             0.167      0.116            0.421 #>  4                4             0.167      0.0965           0.518 #>  5                5             0.167      0.0804           0.598 #>  6                6             0.167      0.0670           0.665 #>  7                7             0.167      0.0558           0.721 #>  8                8             0.167      0.0465           0.767 #>  9                9             0.167      0.0388           0.806 #> 10               10             0.167      0.0323           0.838"}]
