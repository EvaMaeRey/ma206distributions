[{"path":"https://evamaerey.github.io/ma206distributions/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2023 ma206distributions authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://evamaerey.github.io/ma206distributions/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"First Last. Author, maintainer.","code":""},{"path":"https://evamaerey.github.io/ma206distributions/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Last F (2023). ma206distributions: Package (One Line, Title Case). R package version 0.0.0.9000, https://evamaerey.github.io/ma206distributions/.","code":"@Manual{,   title = {ma206distributions: What the Package Does (One Line, Title Case)},   author = {First Last},   year = {2023},   note = {R package version 0.0.0.9000},   url = {https://evamaerey.github.io/ma206distributions/}, }"},{"path":"https://evamaerey.github.io/ma206distributions/index.html","id":"ma206distributions","dir":"","previous_headings":"","what":"ma206distributions","title":"What the Package Does (One Line, Title Case)","text":"ma206distributions package allows easily visualize common distributions statistical probabilistic analytics ggplot2.","code":""},{"path":"https://evamaerey.github.io/ma206distributions/index.html","id":"abstract","dir":"","previous_headings":"","what":"Abstract","title":"What the Package Does (One Line, Title Case)","text":"Mathematical fluency involves frequent use probability distributions. However, visualizing distributions can tedious. well-defined statistics probability curriculum, set distributions mastered known limited. settings shortcuts produce ingest distributions analytic software display analysis beneficial students instructors alike. goal project provide ready--use objects (data frames) functions make easier engage computationally distributions. make objects functions available R package ma206distributions.","code":""},{"path":"https://evamaerey.github.io/ma206distributions/index.html","id":"which-distributions-are-relevant-for-the-statistics-and-probability-course","dir":"","previous_headings":"","what":"Which distributions are relevant for the statistics and probability course?","title":"What the Package Does (One Line, Title Case)","text":"MA206 course, ’ve identified normal, binomial, geometric distributions targets used mastered. addition, students able assess implications given random discrete variable distributions (constructed distributions).","code":""},{"path":"https://evamaerey.github.io/ma206distributions/index.html","id":"objectives","dir":"","previous_headings":"","what":"Objectives","title":"What the Package Does (One Line, Title Case)","text":"Provide functions return data frames relating outcomes probabilities binomial geometric distributions Providing quick-viz stamp functions binomial geometric distributions (normal t exist ggxmean). Wishlist: also think rewrite stamp_normal (.e. height distribution look like?) Provide additional dataframes ma206 probabilities curriculum (probability problems text book). might moved ma206data package point. Provide interactive app 1) demonstrates distribution characteristics, allowing easy manipulation parameters 2) connects new package functionality quoting back code underlying app.","code":""},{"path":[]},{"path":"https://evamaerey.github.io/ma206distributions/index.html","id":"the-problem","dir":"","previous_headings":"Objectives > Objective #1. provide data frames that relate outcomes and probabilities","what":"The problem","title":"What the Package Does (One Line, Title Case)","text":"Currently, students may use R calculator quick computation probabilistic quantities. However, using existing methodologies may divorce quantities useful context. example, consider question: probability rolling 6 exactly 2 times eight die rolls (fair di). Solving problem current toolbox might look like . solution concise, lacks context, doesn’t nicely parlay answer related adjacent questions. propose instead full set paired outcomes probabilities made available students asking question via ma206distributions function tidy_dbinom. answer preceding question, , students consult table produce using function: Consulting table, students find ‘2 successes’ outcome find associated probability .2009 – just 20%! can consult table answer number additional questions scenario. probability rolling exactly one six? Zero sixes? probability rolling two successes (sixes) fewer? students interested visual presentation, might also use distribution combined powerful intuitive ggplot2 plotting system, uses dataframe inputs. complement probabilistic work, ma206distributions package also contains geom_lollipop() function display outcome-probability pairing via ‘lollipop’ chart popular visualizing discrete distributions. Furthermore, ma206distributions package also contains scale_x_counting() function ensures tick marks numerical values provided counting values x, support distribution. package ma206data also gives stamp shortcut data visualization layer, used following manner. method might used instructors students alike comfortable distribution underpinnings:","code":"dbinom(x = 2, size = 8, prob = 1/6) ## [1] 0.2604762 library(ma206distributions) options(scipen = 8, digits = 3) tidy_dbinom(single_trial_prob = 1/6, 8) ## # A tibble: 9 × 4 ##   num_successes probability single_trial_prob num_trials ##           <int>       <dbl>             <dbl>      <dbl> ## 1             0 0.233                   0.167          8 ## 2             1 0.372                   0.167          8 ## 3             2 0.260                   0.167          8 ## 4             3 0.104                   0.167          8 ## 5             4 0.0260                  0.167          8 ## 6             5 0.00417                 0.167          8 ## 7             6 0.000417                0.167          8 ## 8             7 0.0000238               0.167          8 ## 9             8 0.000000595             0.167          8 library(ma206distributions) library(tidyverse) ## ── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ── ## ✔ dplyr     1.1.0     ✔ readr     2.1.4 ## ✔ forcats   1.0.0     ✔ stringr   1.5.0 ## ✔ ggplot2   3.4.1     ✔ tibble    3.2.0 ## ✔ lubridate 1.9.2     ✔ tidyr     1.3.0 ## ✔ purrr     1.0.1      ## ── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ── ## ✖ dplyr::filter() masks stats::filter() ## ✖ dplyr::lag()    masks stats::lag() ## ℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors tidy_dbinom(single_trial_prob = 1/6, num_trials = 10) %>%   # from ma206distributions   ggplot() +    aes(x = num_successes,        y = probability) +    geom_lollipop(annotate = T, round_digits = 2) +                            # from ma206distributions   scale_x_counting()                 # from ma206distributions ## Warning in geom_post(...): Ignoring unknown parameters: `annotate` and ## `round_digits`  ## Warning in geom_point(...): Ignoring unknown parameters: `annotate` and ## `round_digits` ggplot() +    stamp_dbinom(single_trial_prob = 1/6, num_trials = 10) +    # from ma206distributions   scale_x_counting() +                                        # from ma206distributions   labs(title = \"Probability of rolling 0,1,2,...10 sixes when rolling a fair die 10 times\")"},{"path":"https://evamaerey.github.io/ma206distributions/index.html","id":"including-relevant-equations","dir":"","previous_headings":"Objectives","what":"including relevant equations","title":"What the Package Does (One Line, Title Case)","text":"Section requires updating ma206equations work complementary package, ma206equations exists can deliver relevant equations part distributional plots.","code":"stamp_equation_dbinom <- function(x, y ){NULL}  # library(ma206equations) ggplot() +    stamp_dbinom(single_trial_prob = 1/6, num_trials = 10) +    # from ma206distributions   scale_x_counting()  +                                       # from ma206distributions   stamp_equation_dbinom(x = 7, y = .24)"},{"path":"https://evamaerey.github.io/ma206distributions/index.html","id":"tidy_dgeometric","dir":"","previous_headings":"Objectives > including relevant equations","what":"tidy_dgeometric","title":"What the Package Does (One Line, Title Case)","text":"Similarly, geometric distributions might delivered data frame. things stand use R ask answer questions like ’3 spins, likely win grand prize prize wheel 1/12 chance per spin grand prize win? Currently, students might use dgeom function answer question trials success observed. example: Given probability free throw success 2/3 given player, probability ’ll see first success upon third attempt? Currently, students might answer question using R calculate quantity. However, quantities lack context. ma206distributions package provides function instead deliver data frame attempt number probability paired follows: Students can home information question, also see context larger probability distribution. [geometric distribution, noted complete distribution displayed support (possible wait periods success) infinite.]","code":"dgeom(x = 3-1, prob = 2/3) ## [1] 0.0741 library(ma206distributions) tidy_dgeometric(single_trial_prob = 2/3, num_attempts = 5) ## # A tibble: 5 × 4 ##   observed_attempt single_trial_prob probability cumulative_prob ##              <int>             <dbl>       <dbl>           <dbl> ## 1                1             0.667     0.667             0.667 ## 2                2             0.667     0.222             0.889 ## 3                3             0.667     0.0741            0.963 ## 4                4             0.667     0.0247            0.988 ## 5                5             0.667     0.00823           0.996"},{"path":"https://evamaerey.github.io/ma206distributions/index.html","id":"the-normal-distribution","dir":"","previous_headings":"Objectives > including relevant equations","what":"the normal distribution…","title":"What the Package Does (One Line, Title Case)","text":"fixing stamp_normal automatically scale.","code":""},{"path":[]},{"path":"https://evamaerey.github.io/ma206distributions/index.html","id":"id_3-tidying-data-from-discrete-random-variable-probability-problems","dir":"","previous_headings":"","what":"3. Tidying data from discrete random variable probability problems","title":"What the Package Does (One Line, Title Case)","text":"Tidying data important data inputted R coding language. process ‘tidying’ data creates well-organized structured format easier data analysis visualization. Probability tables often communicated untidy, wide forms easily ingested statistical software. (another example: http://www.stat.yale.edu/Courses/1997-98/101/ranvar.htm#:~:text=%20discrete%20random%20variable%20is,%20it%20must%20be%20discrete) example, table provided probability problem spinning wheel pie sectors various prize award amounts: table summarized situation:  get data tidy, ready--use form, transposed table wide long variable columns column headers inform us content. way, row forms observation, case event type. spinning prize wheel three outcomes based sector type wheel landed : prize, win $1, win $3. added numeric column ‘payout’ makes data easier use mathematical standpoint. tidied data. package include data structured way, call object prize_wheel: see can easily visualize joint distribution payout frequency using ggplot2 tool used heavily statistics part class.","code":"library(ma206distributions) print(prize_wheel) ##   sector_type frequency payout ## 1    No Prize         9      0 ## 2      Win $1         1      1 ## 3      Win $3         2      3 library(tidyverse) prize_wheel %>%    ggplot() +    aes(x = payout) +    aes(y = frequency) +   geom_lollipop() +    aes(weight = frequency) +   geom_fulcrum(color = \"red\",                 shape = 2, size = 5)"},{"path":"https://evamaerey.github.io/ma206distributions/index.html","id":"the-tabular-data-can-also-be-used-to-walk-through-computations-like-finding-the-expected-value-of-the-prize-wheel-spin","dir":"","previous_headings":"","what":"What the Package Does (One Line, Title Case)","title":"What the Package Does (One Line, Title Case)","text":"","code":"sum(prize_wheel$payout *   prize_wheel$frequency) /   sum(prize_wheel$frequency) ## [1] 0.583 library(tidyverse) library(ggxmean)  ggxmean:::stamp_space() +    stamp_normal_dist()"},{"path":[]},{"path":"https://evamaerey.github.io/ma206distributions/index.html","id":"some-initial-code-ideas","dir":"","previous_headings":"","what":"Some initial code ideas…","title":"What the Package Does (One Line, Title Case)","text":", visualization base R base ggplot2. aim provide code feels much effortless fun use visualize distributions.","code":""},{"path":"https://evamaerey.github.io/ma206distributions/index.html","id":"efficiency-gains-visualizing-a-binomial-distribution-without-ma206distributions-functions","dir":"","previous_headings":"","what":"Efficiency gains: Visualizing a binomial distribution without {ma206distributions} functions","title":"What the Package Does (One Line, Title Case)","text":"equations plot produce following fashion (functions package pre-built): {{_N}C{_k}} * pkq{N-k}  footnote: Another possibility using stat_function() function ggplot2 produce visualizations binomial distribution. , show can visualize binomial distribution 20 trials .2 probability success trial. Using stat_function() carefully, can get similar outcome. However, lot coordination ’s required: 20 shows three times construction example xlim(); n = 21 (20 + 1 possible outcomes); finally args list. Producing plot requires lot foreknowledge. alternative strategies, (delivering data frames stamps), hope give students something can produce easily, conversation distribution form .","code":"library(tidyverse)  latex2exp::TeX(\"${{_N}C{_k}} \\\\cdot p^kq^{N-k}$\") ##    LaTeX: ${{_N}C{_k}} \\cdot p^kq^{N-k}$  ## plotmath: {{{}[N]}*C * {{}[k]}} %.% p^{k}*q^{N - k} single_trial_prob <- .5 num_trials <- 10  0:num_trials ->   possible_outcomes   dbinom(x = possible_outcomes,        size = 10,        prob = single_trial_prob) ->   probs  tibble(possible_outcomes, probs) %>%   ggplot() +   aes(x = possible_outcomes) +   scale_x_continuous(breaks = possible_outcomes) +   aes(y = probs) +   geom_point(fill = \"white\") +   aes(xend = possible_outcomes,       yend = 0) +   geom_segment() +   labs(subtitle = \"Course idea #0: For multiple trials, the probability of a certain number of successes...\" %>%          str_wrap(60),        x = \"Number of Successes in 10 trials\",        y = \"Probability\") +   geom_text(aes(label = probs %>% round(4)),             nudge_y = .01) +      annotate(geom = \"text\",     x = 1.5,     y = .2,     label = \"{{{}[N]}*C * {{}[k]}} %.% p^{k}*q^{N - k}\",     parse = TRUE,     size = 5) -> binomial_distribution  binomial_distribution library(ggplot2) ggplot() +    xlim(0, 20) +   stat_function(fun = dbinom,                 geom = \"point\",                  n = 21,                 args = list(size = 20, prob = .2)) +    labs(y = \"Probability\") +    labs(x = \"Number of successes in 20 trials\") +    labs(title = \"Given 20 trials where the probability for success in a single\\n trial is .2, what are the probabilities for each possible\\nnumber of observed successes \")"},{"path":"https://evamaerey.github.io/ma206distributions/index.html","id":"visualizing-a-discrete-random-variable-without-ma206distributions-functions","dir":"","previous_headings":"","what":"Visualizing a Discrete Random Variable without {ma206distributions} functions","title":"What the Package Does (One Line, Title Case)","text":"Probability problems structured data frames visualized tools used stats part class.  See also: learning materials: https://github.com/EvaMaeRey/ay_2023_2_advanced_individual_study sibling project: https://github.com/EvaMaeRey/ma206equations See also: https://evamaerey.github.io/mytidytuesday/2022-08-01-dbinom-dgeom/dbinom_dgeom.html https://evamaerey.github.io/mytidytuesday/2022-08-01-dbinom-dgeom/dbinom_dgeom_flipbook.html","code":"tibble(event = c(\"totaled\", \"fender bender\", \"accident free\"),        probability = c(.01, .09, .9),        payout = c(20000, 5000, 0)) -> expected  plotmath_ev <- latex2exp::TeX(\"$E[X] = x_1p_1 + x_2p_2 + x_3p_3 ...x_np_n = \\\\sum_1^n{x_ip_i}$\")  plotmath_var <- latex2exp::TeX(\"$Var(X) = E[(X-\\\\mu)^2] = \\\\sigma^2_x = \\\\sum_1^n(x_i-\\\\mu)^2p_i$\")  plotmath_sd <- latex2exp::TeX(\"$\\\\sigma_x = SD(X) = \\\\sqrt{Var(X)}$\")     expected %>%    ggplot() +    aes(x = payout, y = probability) +    geom_point() +    geom_segment(aes(xend = payout, yend = 0)) +    geom_text(aes(label = probability), size = 5,              vjust = -.5, color = \"black\") +    geom_fulcrum(aes(weight = probability)) +    geom_vline(xintercept = sum(c(.01*20000, .09*5000)),              linetype = \"dashed\", color = \"black\") +    labs(subtitle = \"Course idea 8:  The expected value E.V. is the 'balancing point' of a Random variable, X.  It is the weighted average of values, (weighting values by their probabilities). In large samples from the X, the average will be close to the E.V.;\" %>% str_wrap(60)) +    annotate(geom = \"label\", x =sum(c(.01*20000, .09*5000)), label = sum(c(.01*20000, .09*5000)), y = .5 ) +    scale_y_continuous(limits = c(0,1)) +    annotate(geom = \"text\", label = plotmath_ev, parse = T,            x = 12000, y = .95) +   annotate(geom = \"text\", label = plotmath_var, parse = T,            x = 12000, y = .8) +     annotate(geom = \"text\", label = plotmath_sd, parse = T,            x = 12000, y = .65) -> discrete_random ## Warning in geom_fulcrum(aes(weight = probability)): Ignoring unknown ## aesthetics: weight discrete_random ## Warning in is.na(x): is.na() applied to non-(list or vector) of type ## 'expression'  ## Warning in is.na(x): is.na() applied to non-(list or vector) of type ## 'expression'  ## Warning in is.na(x): is.na() applied to non-(list or vector) of type ## 'expression'"},{"path":[]},{"path":[]},{"path":"https://evamaerey.github.io/ma206distributions/index.html","id":"how-do-we-bundle-up-related-functions-packages","dir":"","previous_headings":"","what":"How do we bundle up related functions? Packages.","title":"What the Package Does (One Line, Title Case)","text":"still follow steps outlined data package readme: https://github.com/EvaMaeRey/tidytitanic well consult package building guide: https://evamaerey.github.io/package_in_20_minutes/package_in_20_minutes","code":""},{"path":"https://evamaerey.github.io/ma206distributions/index.html","id":"how-do-we-collaborate-and-share-the-package-version-control","dir":"","previous_headings":"","what":"How do we collaborate and share the package? Version Control…","title":"What the Package Does (One Line, Title Case)","text":"create github account collaboration https://github.com/ ’ll make repository available account","code":"# tibble(baby = 1:4) %>%  #  crossing(tibble(mom = 1:4)) %>%  #  mutate(match = baby == mom) %>%  #  ggplot() +  #   aes(fill = match) + aes(x = baby) + aes(y = mom) +  #   geom_tile()"},{"path":"https://evamaerey.github.io/ma206distributions/reference/geom_fulcrum.html","id":null,"dir":"Reference","previous_headings":"","what":"Fulcrum geom — geom_fulcrum","title":"Fulcrum geom — geom_fulcrum","text":"geom_fulcrum() sits x axis balancing point data.","code":""},{"path":"https://evamaerey.github.io/ma206distributions/reference/geom_fulcrum.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fulcrum geom — geom_fulcrum","text":"","code":"geom_fulcrum(   mapping = NULL,   data = NULL,   position = \"identity\",   na.rm = FALSE,   show.legend = NA,   inherit.aes = TRUE,   ... )"},{"path":"https://evamaerey.github.io/ma206distributions/reference/geom_fulcrum.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fulcrum geom — geom_fulcrum","text":"geom layer sits balancing point data based x optionally weight","code":""},{"path":"https://evamaerey.github.io/ma206distributions/reference/geom_fulcrum.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fulcrum geom — geom_fulcrum","text":"","code":"library(ggplot2) ggplot(data = prize_wheel) + aes(x = payout, y = frequency, weight = frequency) + geom_lollipop() + geom_fulcrum(color = \"red\", shape = 2, size = 5)   library(ggplot2) ggplot(data = cars) + aes(x = speed, y = dist) + geom_point() + geom_rug() + geom_fulcrum(color = \"red\", shape = 2, size = 5)"},{"path":"https://evamaerey.github.io/ma206distributions/reference/geom_lollipop.html","id":null,"dir":"Reference","previous_headings":"","what":"Lollipop geom — geom_lollipop","title":"Lollipop geom — geom_lollipop","text":"lollipop often used attractively communicate discrete quantitative distributions.","code":""},{"path":"https://evamaerey.github.io/ma206distributions/reference/geom_lollipop.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Lollipop geom — geom_lollipop","text":"","code":"geom_lollipop(annotate = F, ...)"},{"path":"https://evamaerey.github.io/ma206distributions/reference/geom_lollipop.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Lollipop geom — geom_lollipop","text":"ggplot geom layer","code":""},{"path":"https://evamaerey.github.io/ma206distributions/reference/geom_lollipop.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Lollipop geom — geom_lollipop","text":"","code":"library(ggplot2) ggplot(data = prize_wheel) + aes(x = payout, y = frequency) + geom_lollipop()   library(ggplot2) ggplot(data = prize_wheel) + aes(x = payout, y = frequency) + geom_lollipop(annotate = T) #> Warning: Computation failed in `stat_postlabel()` #> Caused by error in `rep(0, round_digits - 1) %>% paste(collapse = \"\") %>% paste0(\"< .\", ., \"1\")`: #> ! could not find function \"%>%\""},{"path":"https://evamaerey.github.io/ma206distributions/reference/geom_post.html","id":null,"dir":"Reference","previous_headings":"","what":"Post geom — geom_post","title":"Post geom — geom_post","text":"geom_post() may used visualize discrete quantitative distributions","code":""},{"path":"https://evamaerey.github.io/ma206distributions/reference/geom_post.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Post geom — geom_post","text":"","code":"geom_post(   mapping = NULL,   data = NULL,   position = \"identity\",   na.rm = FALSE,   show.legend = NA,   inherit.aes = TRUE,   ... )"},{"path":"https://evamaerey.github.io/ma206distributions/reference/geom_post.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Post geom — geom_post","text":"ggplot2 geom layer","code":""},{"path":"https://evamaerey.github.io/ma206distributions/reference/geom_post.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Post geom — geom_post","text":"","code":"library(ggplot2) ggplot(data = prize_wheel) + aes(x = payout, y = frequency) + geom_post()"},{"path":"https://evamaerey.github.io/ma206distributions/reference/geom_post_label.html","id":null,"dir":"Reference","previous_headings":"","what":"Post geom — geom_post_label","title":"Post geom — geom_post_label","text":"geom_post() may used visualize discrete quantitative distributions","code":""},{"path":"https://evamaerey.github.io/ma206distributions/reference/geom_post_label.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Post geom — geom_post_label","text":"","code":"geom_post_label(   mapping = NULL,   data = NULL,   position = \"identity\",   na.rm = FALSE,   show.legend = NA,   inherit.aes = TRUE,   vjust = -0.6,   ... )"},{"path":"https://evamaerey.github.io/ma206distributions/reference/geom_post_label.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Post geom — geom_post_label","text":"ggplot2 geom layer","code":""},{"path":"https://evamaerey.github.io/ma206distributions/reference/geom_post_label.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Post geom — geom_post_label","text":"","code":"library(ggplot2) ggplot(data = prize_wheel) + aes(x = payout, y = frequency) + geom_post() + geom_post_label() #> Warning: Computation failed in `stat_postlabel()` #> Caused by error in `rep(0, round_digits - 1) %>% paste(collapse = \"\") %>% paste0(\"< .\", ., \"1\")`: #> ! could not find function \"%>%\"   tidy_dbinom(single_trial_prob = 1/6, num_trials = 10) %>%   # from ma206distributions ggplot() +  aes(x = num_successes,      y = probability) +  geom_lollipop(annotate = TRUE,                round_digits = 2) +                            # from ma206distributions  scale_x_counting()                 # from ma206distributions #> Error in tidy_dbinom(single_trial_prob = 1/6, num_trials = 10) %>% ggplot(): could not find function \"%>%\""},{"path":"https://evamaerey.github.io/ma206distributions/reference/geom_segment_sd.html","id":null,"dir":"Reference","previous_headings":"","what":"Title — geom_segment_sd","title":"Title — geom_segment_sd","text":"Title","code":""},{"path":"https://evamaerey.github.io/ma206distributions/reference/geom_segment_sd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Title — geom_segment_sd","text":"","code":"geom_segment_sd(   mapping = NULL,   data = NULL,   position = \"identity\",   na.rm = FALSE,   show.legend = NA,   inherit.aes = TRUE,   ... )"},{"path":"https://evamaerey.github.io/ma206distributions/reference/geom_segment_sd.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Title — geom_segment_sd","text":"","code":"library(ggplot2) ggplot(cars) + aes(x = speed, y = dist) + geom_point() + geom_fulcrum(color = \"red\", shape = 2, size = 5) + geom_segment_sd(color = \"red\", linewidth = 3)"},{"path":"https://evamaerey.github.io/ma206distributions/reference/good_digits.html","id":null,"dir":"Reference","previous_headings":"","what":"Title — good_digits","title":"Title — good_digits","text":"Title","code":""},{"path":"https://evamaerey.github.io/ma206distributions/reference/good_digits.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Title — good_digits","text":"","code":"good_digits(x, digits = 3)"},{"path":"https://evamaerey.github.io/ma206distributions/reference/good_digits.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Title — good_digits","text":"digits","code":""},{"path":"https://evamaerey.github.io/ma206distributions/reference/good_digits.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Title — good_digits","text":"","code":"good_digits(x = .8999, digits = 2) #> Error in formatC(signif(x, digits = digits), digits = digits, format = \"fg\",     flag = \"#\") %>% stringr::str_replace(\"\\\\.$\", \"\"): could not find function \"%>%\""},{"path":"https://evamaerey.github.io/ma206distributions/reference/prize_wheel.html","id":null,"dir":"Reference","previous_headings":"","what":"Example problem data — prize_wheel","title":"Example problem data — prize_wheel","text":"Data chapter 11 MA206's text book","code":""},{"path":"https://evamaerey.github.io/ma206distributions/reference/prize_wheel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example problem data — prize_wheel","text":"","code":"prize_wheel"},{"path":[]},{"path":"https://evamaerey.github.io/ma206distributions/reference/prize_wheel.html","id":"prize-wheel","dir":"Reference","previous_headings":"","what":"prize_wheel","title":"Example problem data — prize_wheel","text":"data frame 3 rows 3 columns: sector_type type pie slice prize wheel frequency proportion pie slice type payout much paid case landing slice","code":""},{"path":[]},{"path":"https://evamaerey.github.io/ma206distributions/reference/prize_wheel.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Example problem data — prize_wheel","text":"","code":"prize_wheel #>   sector_type frequency payout #> 1    No Prize         9      0 #> 2      Win $1         1      1 #> 3      Win $3         2      3  library(ggplot2) ggplot(prize_wheel) +     aes(x = payout, y = frequency) +     geom_lollipop()   prize_wheel %>%   merge(prize_wheel, by = NULL) %>%   merge(prize_wheel, by = NULL) %>%   merge(prize_wheel, by = NULL) #> Error in prize_wheel %>% merge(prize_wheel, by = NULL) %>% merge(prize_wheel,     by = NULL) %>% merge(prize_wheel, by = NULL): could not find function \"%>%\""},{"path":"https://evamaerey.github.io/ma206distributions/reference/scale_x_counting.html","id":null,"dir":"Reference","previous_headings":"","what":"scale_x_counting — scale_x_counting","title":"scale_x_counting — scale_x_counting","text":"Show x axis guides ticks integers","code":""},{"path":"https://evamaerey.github.io/ma206distributions/reference/scale_x_counting.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"scale_x_counting — scale_x_counting","text":"","code":"scale_x_counting(breaks = 0:10000, ...)"},{"path":"https://evamaerey.github.io/ma206distributions/reference/scale_x_counting.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"scale_x_counting — scale_x_counting","text":"breaks numeric vector breaks placed ...","code":""},{"path":"https://evamaerey.github.io/ma206distributions/reference/scale_x_counting.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"scale_x_counting — scale_x_counting","text":"ggplot2 scale function","code":""},{"path":"https://evamaerey.github.io/ma206distributions/reference/scale_x_counting.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"scale_x_counting — scale_x_counting","text":"","code":"library(ggplot2) ggplot(tidy_dbinom(1/6, num_trials = 8)) +   aes(x = num_successes) +   scale_x_counting() +   aes(y = probability) +   geom_lollipop()"},{"path":"https://evamaerey.github.io/ma206distributions/reference/stamp_dbinom.html","id":null,"dir":"Reference","previous_headings":"","what":"stamp_dbinom — stamp_dbinom","title":"stamp_dbinom — stamp_dbinom","text":"stamp_dbinom returns plot plots number successes probabilities given probability single trial total number trials.","code":""},{"path":"https://evamaerey.github.io/ma206distributions/reference/stamp_dbinom.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"stamp_dbinom — stamp_dbinom","text":"","code":"stamp_dbinom(single_trial_prob = 0.5, num_trials = 10)"},{"path":"https://evamaerey.github.io/ma206distributions/reference/stamp_dbinom.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"stamp_dbinom — stamp_dbinom","text":"single_trial_prob numeric value 0 1 num_trials positive integer total number trials","code":""},{"path":"https://evamaerey.github.io/ma206distributions/reference/stamp_dbinom.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"stamp_dbinom — stamp_dbinom","text":"plot plots number success associated probabilities","code":""},{"path":"https://evamaerey.github.io/ma206distributions/reference/stamp_dbinom.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"stamp_dbinom — stamp_dbinom","text":"","code":"library(ggplot2) ggplot() + stamp_dbinom() #> Error in !annotate: invalid argument type  ggplot() + stamp_dbinom(single_trial_prob = 1/12, num_trials = 3) #> Error in !annotate: invalid argument type"},{"path":"https://evamaerey.github.io/ma206distributions/reference/stamp_dgeometric.html","id":null,"dir":"Reference","previous_headings":"","what":"Title — stamp_dgeometric","title":"Title — stamp_dgeometric","text":"Title","code":""},{"path":"https://evamaerey.github.io/ma206distributions/reference/stamp_dgeometric.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Title — stamp_dgeometric","text":"","code":"stamp_dgeometric(single_prob = 0.5, num_attempts = 10)"},{"path":"https://evamaerey.github.io/ma206distributions/reference/stamp_dgeometric.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Title — stamp_dgeometric","text":"num_attempts","code":""},{"path":"https://evamaerey.github.io/ma206distributions/reference/stamp_dgeometric.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Title — stamp_dgeometric","text":"","code":"library(ggplot2) ggplot() + stamp_dgeometric() #> Error in !annotate: invalid argument type"},{"path":"https://evamaerey.github.io/ma206distributions/reference/theme_axis_x_censored.html","id":null,"dir":"Reference","previous_headings":"","what":"theme_axis_x_censored — theme_axis_x_censored","title":"theme_axis_x_censored — theme_axis_x_censored","text":"Show x axis guides ticks integers","code":""},{"path":"https://evamaerey.github.io/ma206distributions/reference/theme_axis_x_censored.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"theme_axis_x_censored — theme_axis_x_censored","text":"","code":"theme_axis_x_censored()"},{"path":"https://evamaerey.github.io/ma206distributions/reference/theme_axis_x_censored.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"theme_axis_x_censored — theme_axis_x_censored","text":"breaks numeric vector breaks placed ...","code":""},{"path":"https://evamaerey.github.io/ma206distributions/reference/theme_axis_x_censored.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"theme_axis_x_censored — theme_axis_x_censored","text":"ggplot2 theme function indicate x right censored","code":""},{"path":"https://evamaerey.github.io/ma206distributions/reference/theme_axis_x_censored.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"theme_axis_x_censored — theme_axis_x_censored","text":"","code":"library(ggplot2) ggplot(tidy_dbinom(1/6, num_trials = 8)) +   aes(x = num_successes) +   scale_x_counting() +   aes(y = probability) +   geom_lollipop() +   theme_axis_x_censored()"},{"path":"https://evamaerey.github.io/ma206distributions/reference/tidy_dbinom.html","id":null,"dir":"Reference","previous_headings":"","what":"Tidy_dbinom returns a data table that pairs number of successes with probabilities given the probability of a single trial and the total number of trials. — tidy_dbinom","title":"Tidy_dbinom returns a data table that pairs number of successes with probabilities given the probability of a single trial and the total number of trials. — tidy_dbinom","text":"Tidy_dbinom returns data table pairs number successes probabilities given probability single trial total number trials.","code":""},{"path":"https://evamaerey.github.io/ma206distributions/reference/tidy_dbinom.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Tidy_dbinom returns a data table that pairs number of successes with probabilities given the probability of a single trial and the total number of trials. — tidy_dbinom","text":"","code":"tidy_dbinom(single_trial_prob = 0.5, num_trials = 10)"},{"path":"https://evamaerey.github.io/ma206distributions/reference/tidy_dbinom.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Tidy_dbinom returns a data table that pairs number of successes with probabilities given the probability of a single trial and the total number of trials. — tidy_dbinom","text":"single_trial_prob numeric value 0 1 num_trials positive integer total number trials","code":""},{"path":"https://evamaerey.github.io/ma206distributions/reference/tidy_dbinom.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Tidy_dbinom returns a data table that pairs number of successes with probabilities given the probability of a single trial and the total number of trials. — tidy_dbinom","text":"data frame pairing number successes probabilities.","code":""},{"path":"https://evamaerey.github.io/ma206distributions/reference/tidy_dbinom.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Tidy_dbinom returns a data table that pairs number of successes with probabilities given the probability of a single trial and the total number of trials. — tidy_dbinom","text":"","code":"tidy_dbinom(single_trial_prob = 1/6, num_trials = 4) #> # A tibble: 5 × 4 #>   num_successes probability single_trial_prob num_trials #>           <int>       <dbl>             <dbl>      <dbl> #> 1             0    0.482                0.167          4 #> 2             1    0.386                0.167          4 #> 3             2    0.116                0.167          4 #> 4             3    0.0154               0.167          4 #> 5             4    0.000772             0.167          4 tidy_dbinom(.5, 10) #> # A tibble: 11 × 4 #>    num_successes probability single_trial_prob num_trials #>            <int>       <dbl>             <dbl>      <dbl> #>  1             0    0.000977               0.5         10 #>  2             1    0.00977                0.5         10 #>  3             2    0.0439                 0.5         10 #>  4             3    0.117                  0.5         10 #>  5             4    0.205                  0.5         10 #>  6             5    0.246                  0.5         10 #>  7             6    0.205                  0.5         10 #>  8             7    0.117                  0.5         10 #>  9             8    0.0439                 0.5         10 #> 10             9    0.00977                0.5         10 #> 11            10    0.000977               0.5         10 tidy_dbinom(1/12, 3) #> # A tibble: 4 × 4 #>   num_successes probability single_trial_prob num_trials #>           <int>       <dbl>             <dbl>      <dbl> #> 1             0    0.770               0.0833          3 #> 2             1    0.210               0.0833          3 #> 3             2    0.0191              0.0833          3 #> 4             3    0.000579            0.0833          3 tidy_dbinom(.5, 20) #> # A tibble: 21 × 4 #>    num_successes probability single_trial_prob num_trials #>            <int>       <dbl>             <dbl>      <dbl> #>  1             0 0.000000954               0.5         20 #>  2             1 0.0000191                 0.5         20 #>  3             2 0.000181                  0.5         20 #>  4             3 0.00109                   0.5         20 #>  5             4 0.00462                   0.5         20 #>  6             5 0.0148                    0.5         20 #>  7             6 0.0370                    0.5         20 #>  8             7 0.0739                    0.5         20 #>  9             8 0.120                     0.5         20 #> 10             9 0.160                     0.5         20 #> # … with 11 more rows  library(ggplot2) ggplot(tidy_dbinom(1/6, num_trials = 8)) +   aes(x = num_successes) +   scale_x_counting() +   aes(y = probability) +   geom_lollipop()"},{"path":"https://evamaerey.github.io/ma206distributions/reference/tidy_dgeometric.html","id":null,"dir":"Reference","previous_headings":"","what":"Title — tidy_dgeometric","title":"Title — tidy_dgeometric","text":"Title","code":""},{"path":"https://evamaerey.github.io/ma206distributions/reference/tidy_dgeometric.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Title — tidy_dgeometric","text":"","code":"tidy_dgeometric(single_trial_prob = 0.5, num_attempts = 5)"},{"path":"https://evamaerey.github.io/ma206distributions/reference/tidy_dgeometric.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Title — tidy_dgeometric","text":"num_attempts","code":""},{"path":"https://evamaerey.github.io/ma206distributions/reference/tidy_dgeometric.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Title — tidy_dgeometric","text":"","code":"tidy_dgeometric() #> # A tibble: 5 × 4 #>   observed_attempt single_trial_prob probability cumulative_prob #>              <int>             <dbl>       <dbl>           <dbl> #> 1                1               0.5      0.5              0.5   #> 2                2               0.5      0.25             0.75  #> 3                3               0.5      0.125            0.875 #> 4                4               0.5      0.0625           0.938 #> 5                5               0.5      0.0312           0.969 tidy_dgeometric(single_trial_prob = 1/6, num_attempts = 10) #> # A tibble: 10 × 4 #>    observed_attempt single_trial_prob probability cumulative_prob #>               <int>             <dbl>       <dbl>           <dbl> #>  1                1             0.167      0.167            0.167 #>  2                2             0.167      0.139            0.306 #>  3                3             0.167      0.116            0.421 #>  4                4             0.167      0.0965           0.518 #>  5                5             0.167      0.0804           0.598 #>  6                6             0.167      0.0670           0.665 #>  7                7             0.167      0.0558           0.721 #>  8                8             0.167      0.0465           0.767 #>  9                9             0.167      0.0388           0.806 #> 10               10             0.167      0.0323           0.838"}]
