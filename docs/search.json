[{"path":"/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2023 ma206distributions authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"First Last. Author, maintainer.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Last F (2023). ma206distributions: Package (One Line, Title Case). R package version 0.0.0.9000.","code":"@Manual{,   title = {ma206distributions: What the Package Does (One Line, Title Case)},   author = {First Last},   year = {2023},   note = {R package version 0.0.0.9000}, }"},{"path":"/index.html","id":"title","dir":"","previous_headings":"","what":"Title","title":"What the Package Does (One Line, Title Case)","text":"Easily visualize common distributions statistical probabilistic analytics ggplot2","code":""},{"path":"/index.html","id":"abstract","dir":"","previous_headings":"","what":"Abstract","title":"What the Package Does (One Line, Title Case)","text":"Mathematical fluency involves frequent use probability distributions. However, visualizing distributions can tedious. fixed statistics probability curriculum, set distributions mastered well defined. settings shortcuts produce ingest distributions analytic software display analysis beneficial students instructors alike. goal project provide ready--use objects (dataframes) functions meet students make easier engage computationally distributions. make objects functions available R package ma206distributions.","code":""},{"path":"/index.html","id":"which-distributions-are-relevant-for-the-statistics-and-probability-course","dir":"","previous_headings":"","what":"Which distributions are relevant for the statistics and probability course?","title":"What the Package Does (One Line, Title Case)","text":"good start looking core distributions ma206 course guide: binomial geometric normal distribution random","code":""},{"path":"/index.html","id":"objectives","dir":"","previous_headings":"","what":"Objectives","title":"What the Package Does (One Line, Title Case)","text":"Provide functions return dataframes relating outcomes probabilities binomial geometric distributions Providing quick-viz stamp functions binomial geometric distributions (normal t exist ggxmean); also think rewrite stamp_normal (.e. height distribution look like?) Provide additional dataframes ma206 probabilities curriculum (probability problems text book). Interactive app 1) demonstrates distribution characteristics, allowing easy manipulation parameters 2) connects new package functionality quoting back code underlying app.","code":""},{"path":"/index.html","id":"1-provide-data-frames-that-relate-outcomes-and-probabilities","dir":"","previous_headings":"Objectives","what":"1. provide data frames that relate outcomes and probabilities","title":"What the Package Does (One Line, Title Case)","text":"can look vectors outcomes, use dbinom get back vector probabilities.","code":"num_successes <- 0:10; num_successes ##  [1]  0  1  2  3  4  5  6  7  8  9 10 dbinom(num_successes, prob = .5, size = 10) ##  [1] 0.0009765625 0.0097656250 0.0439453125 0.1171875000 0.2050781250 ##  [6] 0.2460937500 0.2050781250 0.1171875000 0.0439453125 0.0097656250 ## [11] 0.0009765625 library(ma206distributions) # probability of number of heads in 10 coin flips tidy_dbinom(single_trial_prob = .5, 10) ## # A tibble: 11 × 4 ##    num_successes probability single_trial_prob num_trials ##            <int>       <dbl>             <dbl>      <dbl> ##  1             0    0.000977               0.5         10 ##  2             1    0.00977                0.5         10 ##  3             2    0.0439                 0.5         10 ##  4             3    0.117                  0.5         10 ##  5             4    0.205                  0.5         10 ##  6             5    0.246                  0.5         10 ##  7             6    0.205                  0.5         10 ##  8             7    0.117                  0.5         10 ##  9             8    0.0439                 0.5         10 ## 10             9    0.00977                0.5         10 ## 11            10    0.000977               0.5         10 # probabilities of rolling 0, 1, 2, 3 or 4 sixes in 4 die roles tidy_dbinom(single_trial_prob = 1/6, 4) ## # A tibble: 5 × 4 ##   num_successes probability single_trial_prob num_trials ##           <int>       <dbl>             <dbl>      <dbl> ## 1             0    0.482                0.167          4 ## 2             1    0.386                0.167          4 ## 3             2    0.116                0.167          4 ## 4             3    0.0154               0.167          4 ## 5             4    0.000772             0.167          4 # probability of 0, 1, 2 or 3 wins in 3 spins of a prize wheel   # 12 pie slices, one with big payout tidy_dbinom(1/12, 3) ## # A tibble: 4 × 4 ##   num_successes probability single_trial_prob num_trials ##           <int>       <dbl>             <dbl>      <dbl> ## 1             0    0.770               0.0833          3 ## 2             1    0.210               0.0833          3 ## 3             2    0.0191              0.0833          3 ## 4             3    0.000579            0.0833          3"},{"path":"/index.html","id":"2-stamp-visualizations","dir":"","previous_headings":"Objectives","what":"2. Stamp visualizations","title":"What the Package Does (One Line, Title Case)","text":"","code":"library(ggplot2) ggplot() +    geom_lollipop(data = tidy_dbinom(single_trial_prob = .5, 10),                 aes(x = num_successes, y = probability)) stamp_dbinom <- function(single_trial_prob = .5, num_trials = 10){      geom_lollipop(data = tidy_dbinom(single_trial_prob = single_trial_prob,                                     num_trials = num_trials),                 aes(x = num_successes, y = probability))    }   ggplot() +    stamp_dbinom() ggplot() +    stamp_dbinom(1/6, num_trials = 6) ggplot() +    stamp_dbinom(1/12, num_trials = 3)"},{"path":"/index.html","id":"3-tidying-data-from-discrete-random-variable-probability-problems","dir":"","previous_headings":"","what":"3. Tidying data from discrete random variable probability problems","title":"What the Package Does (One Line, Title Case)","text":"Tidying data important data inputted R coding language. process ‘tidying’ data creates well-organized structured format easier data analysis visualization. Probability tables often communicated untidy, wide forms easily ingested statistical software. (another example: http://www.stat.yale.edu/Courses/1997-98/101/ranvar.htm#:~:text=%20discrete%20random%20variable%20is,%20it%20must%20be%20discrete) example, table provided probability problem spinning wheel pie sectors various prize award amounts: table summarized situation:  get data tidy, ready--use form, transposed table wide long variable columns column headers inform us content. way, row forms observation, case event type. spinning prize wheel three outcomes based sector type wheel landed : prize, win $1, win $3. added numeric column ‘payout’ makes data easier use mathematical standpoint. tidied data. package include data structured way, call object prize_wheel: see can easily visualize joint distribution payout frequency using ggplot2 tool used heavily statistics part class.","code":"library(ma206distributions) print(prize_wheel) ##   sector_type frequency payout ## 1    No Prize         9      0 ## 2      Win $1         1      1 ## 3      Win $3         2      3 library(tidyverse) prize_wheel %>%    ggplot() +    aes(x = payout) +    aes(y = frequency) +   geom_lollipop() +    aes(weight = frequency) +   geom_fulcrum(color = \"red\",                 shape = 2, size = 5)"},{"path":"/index.html","id":"the-tabular-data-can-also-be-used-to-walk-through-computations-like-finding-the-expected-value-of-the-prize-wheel-spin","dir":"","previous_headings":"","what":"What the Package Does (One Line, Title Case)","title":"What the Package Does (One Line, Title Case)","text":"","code":"sum(prize_wheel$payout *   prize_wheel$frequency) /   sum(prize_wheel$frequency) ## [1] 0.5833333 library(tidyverse) library(ggxmean)  ggxmean:::stamp_space() +    stamp_normal_dist()"},{"path":[]},{"path":"/index.html","id":"some-initial-code-ideas","dir":"","previous_headings":"","what":"Some initial code ideas…","title":"What the Package Does (One Line, Title Case)","text":", visualization base R base ggplot2. aim provide code feels much effortless fun use visualize distributions.","code":""},{"path":"/index.html","id":"visualizing-a-binomial-distribution-without-ma206distributions-functions","dir":"","previous_headings":"","what":"Visualizing a binomial distribution without {ma206distributions} functions","title":"What the Package Does (One Line, Title Case)","text":"equations plot produce following fashion (functions package pre-built): {{_N}C{_k}} * pkq{N-k}  Another possibility using stat_function() function ggplot2 produce visualizations binomial distribution. , show can visualize binomial distribution 20 trials .2 probability success trial. Using stat_function() carefully, can get similar outcome. However, lot coordination ’s required: 20 shows three times construction example xlim(); n = 21 (20 + 1 possible outcomes); finally args list. Producing plot requires lot foreknowledge. alternative strategies, (delivering data frames stamps), hope give students something can produce easily, conversation distribution form .","code":"library(tidyverse)   latex2exp::TeX(\"${{_N}C{_k}} \\\\cdot p^kq^{N-k}$\") ##    LaTeX: ${{_N}C{_k}} \\cdot p^kq^{N-k}$  ## plotmath: {{{}[N]}*C * {{}[k]}} %.% p^{k}*q^{N - k} single_trial_prob <- .5 num_trials <- 10 0:num_trials ->   possible_outcomes dbinom(x = possible_outcomes,        size = 10,        prob = single_trial_prob) ->   probs tibble(possible_outcomes, probs) %>%   ggplot() +   aes(x = possible_outcomes) +   scale_x_continuous(breaks = possible_outcomes) +   aes(y = probs) +   geom_point(fill = \"white\") +   aes(xend = possible_outcomes,       yend = 0) +   geom_segment() +   labs(subtitle = \"Course idea #0: For multiple trials, the probability of a certain number of successes...\" %>%          str_wrap(60),        x = \"Number of Successes in 10 trials\",        y = \"Probability\") +   geom_text(aes(label = probs %>% round(4)),             nudge_y = .01) +      annotate(geom = \"text\",     x = 1.5,     y = .2,     label = \"{{{}[N]}*C * {{}[k]}} %.% p^{k}*q^{N - k}\",     parse = TRUE,     size = 5) ->     binomial_distribution  binomial_distribution library(ggplot2) ggplot() +    xlim(0, 20) +   stat_function(fun = dbinom,                 geom = \"point\",                  n = 21,                 args = list(size = 20, prob = .2)) +    labs(y = \"Probability\") +    labs(x = \"Number of successes in 20 trials\") +    labs(title = \"Given 20 trials where the probability for success in a single\\n trial is .2, what are the probabilities for each possible\\nnumber of observed successes \")"},{"path":"/index.html","id":"visualizing-a-discrete-random-variable-without-ma206distributions-functions","dir":"","previous_headings":"","what":"Visualizing a Discrete Random Variable without {ma206distributions} functions","title":"What the Package Does (One Line, Title Case)","text":"Probability problems structured data frames visualized tools used stats part class.  See also: https://evamaerey.github.io/mytidytuesday/2022-08-01-dbinom-dgeom/dbinom_dgeom.html https://evamaerey.github.io/mytidytuesday/2022-08-01-dbinom-dgeom/dbinom_dgeom_flipbook.html","code":"tibble(event = c(\"totaled\", \"fender bender\", \"accident free\"),        probability = c(.01, .09, .9),        payout = c(20000, 5000, 0)) -> expected  plotmath_ev <- latex2exp::TeX(\"$E[X] = x_1p_1 + x_2p_2 + x_3p_3 ...x_np_n = \\\\sum_1^n{x_ip_i}$\")  plotmath_var <- latex2exp::TeX(\"$Var(X) = E[(X-\\\\mu)^2] = \\\\sigma^2_x = \\\\sum_1^n(x_i-\\\\mu)^2p_i$\")  plotmath_sd <- latex2exp::TeX(\"$\\\\sigma_x = SD(X) = \\\\sqrt{Var(X)}$\")     expected %>%    ggplot() +    aes(x = payout, y = probability) +    geom_point() +    geom_segment(aes(xend = payout, yend = 0)) +    geom_text(aes(label = probability), size = 5,              vjust = -.5, color = \"black\") +    geom_fulcrum(aes(weight = probability)) +    geom_vline(xintercept = sum(c(.01*20000, .09*5000)),              linetype = \"dashed\", color = \"black\") +    labs(subtitle = \"Course idea 8:  The expected value E.V. is the 'balancing point' of a Random variable, X.  It is the weighted average of values, (weighting values by their probabilities). In large samples from the X, the average will be close to the E.V.;\" %>% str_wrap(60)) +    annotate(geom = \"label\", x =sum(c(.01*20000, .09*5000)), label = sum(c(.01*20000, .09*5000)), y = .5 ) +    scale_y_continuous(limits = c(0,1)) +    annotate(geom = \"text\", label = plotmath_ev, parse = T,            x = 12000, y = .95) +   annotate(geom = \"text\", label = plotmath_var, parse = T,            x = 12000, y = .8) +     annotate(geom = \"text\", label = plotmath_sd, parse = T,            x = 12000, y = .65) -> discrete_random ## Warning in geom_fulcrum(aes(weight = probability)): Ignoring unknown ## aesthetics: weight discrete_random ## Warning: The following aesthetics were dropped during statistical transformation: weight ## ℹ This can happen when ggplot fails to infer the correct grouping structure in ##   the data. ## ℹ Did you forget to specify a `group` aesthetic or to convert a numerical ##   variable into a factor?  ## Warning in is.na(x): is.na() applied to non-(list or vector) of type ## 'expression'  ## Warning in is.na(x): is.na() applied to non-(list or vector) of type ## 'expression'  ## Warning in is.na(x): is.na() applied to non-(list or vector) of type ## 'expression'"},{"path":[]},{"path":[]},{"path":"/index.html","id":"how-do-we-bundle-up-related-functions-packages","dir":"","previous_headings":"","what":"How do we bundle up related functions? Packages.","title":"What the Package Does (One Line, Title Case)","text":"still follow steps outlined data package readme: https://github.com/EvaMaeRey/tidytitanic well consult package building guide: https://evamaerey.github.io/package_in_20_minutes/package_in_20_minutes","code":""},{"path":"/index.html","id":"how-do-we-collaborate-and-share-the-package-version-control","dir":"","previous_headings":"","what":"How do we collaborate and share the package? Version Control.","title":"What the Package Does (One Line, Title Case)","text":"create github account collaboration https://github.com/ ’ll make repository available account","code":""},{"path":"/reference/geom_fulcrum.html","id":null,"dir":"Reference","previous_headings":"","what":"Title — geom_fulcrum","title":"Title — geom_fulcrum","text":"Title","code":""},{"path":"/reference/geom_fulcrum.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Title — geom_fulcrum","text":"","code":"geom_fulcrum(   mapping = NULL,   data = NULL,   position = \"identity\",   na.rm = FALSE,   show.legend = NA,   inherit.aes = TRUE,   ... )"},{"path":"/reference/geom_fulcrum.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Title — geom_fulcrum","text":"","code":"library(ggplot2) ggplot(cars) + aes(x = speed, y = dist) + geom_point() + geom_fulcrum(color = \"red\", shape = 2, size = 5)"},{"path":"/reference/geom_lollipop.html","id":null,"dir":"Reference","previous_headings":"","what":"Title — geom_lollipop","title":"Title — geom_lollipop","text":"Title","code":""},{"path":"/reference/geom_lollipop.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Title — geom_lollipop","text":"","code":"geom_lollipop(...)"},{"path":"/reference/geom_lollipop.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Title — geom_lollipop","text":"","code":"library(ggplot2) ggplot(cars) + aes(x = speed, y = dist) + geom_lollipop()"},{"path":"/reference/geom_post.html","id":null,"dir":"Reference","previous_headings":"","what":"Title — geom_post","title":"Title — geom_post","text":"Title","code":""},{"path":"/reference/geom_post.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Title — geom_post","text":"","code":"geom_post(   mapping = NULL,   data = NULL,   position = \"identity\",   na.rm = FALSE,   show.legend = NA,   inherit.aes = TRUE,   ... )"},{"path":"/reference/geom_post.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Title — geom_post","text":"","code":"library(ggplot2) ggplot(cars) + aes(x = speed, y = dist) + geom_post()"},{"path":"/reference/geom_segment_sd.html","id":null,"dir":"Reference","previous_headings":"","what":"Title — geom_segment_sd","title":"Title — geom_segment_sd","text":"Title","code":""},{"path":"/reference/geom_segment_sd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Title — geom_segment_sd","text":"","code":"geom_segment_sd(   mapping = NULL,   data = NULL,   position = \"identity\",   na.rm = FALSE,   show.legend = NA,   inherit.aes = TRUE,   ... )"},{"path":"/reference/geom_segment_sd.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Title — geom_segment_sd","text":"","code":"library(ggplot2) ggplot(cars) + aes(x = speed, y = dist) + geom_point() + geom_fulcrum(color = \"red\", shape = 2, size = 5) + geom_segment_sd(color = \"red\", size = 3) #> Warning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0. #> ℹ Please use `linewidth` instead."},{"path":"/reference/prize_wheel.html","id":null,"dir":"Reference","previous_headings":"","what":"Example problem data — prize_wheel","title":"Example problem data — prize_wheel","text":"Data chapter 11 MA206's text book","code":""},{"path":"/reference/prize_wheel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example problem data — prize_wheel","text":"","code":"prize_wheel"},{"path":[]},{"path":"/reference/prize_wheel.html","id":"prize-wheel","dir":"Reference","previous_headings":"","what":"prize_wheel","title":"Example problem data — prize_wheel","text":"data frame 3 rows 3 columns: sector_type type pie slice prize wheel frequency proportion pie slice type payout much paid case landing slice","code":""},{"path":[]},{"path":"/reference/prize_wheel.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Example problem data — prize_wheel","text":"","code":"library(ggplot2) ggplot(prize_wheel) +     aes(x = payout, y = frequency) +     geom_lollipop()   prize_wheel #>   sector_type frequency payout #> 1    No Prize         9      0 #> 2      Win $1         1      1 #> 3      Win $3         2      3"},{"path":"/reference/tidy_dbinom.html","id":null,"dir":"Reference","previous_headings":"","what":"Tidy_dbinom returns a data table that pairs number of successes with probabilities given the probability of a single trial and the total number of trials. — tidy_dbinom","title":"Tidy_dbinom returns a data table that pairs number of successes with probabilities given the probability of a single trial and the total number of trials. — tidy_dbinom","text":"Tidy_dbinom returns data table pairs number successes probabilities given probability single trial total number trials.","code":""},{"path":"/reference/tidy_dbinom.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Tidy_dbinom returns a data table that pairs number of successes with probabilities given the probability of a single trial and the total number of trials. — tidy_dbinom","text":"","code":"tidy_dbinom(single_trial_prob = 0.5, num_trials = 10)"},{"path":"/reference/tidy_dbinom.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Tidy_dbinom returns a data table that pairs number of successes with probabilities given the probability of a single trial and the total number of trials. — tidy_dbinom","text":"single_trial_prob numeric value 0 1 num_trials positive integer total number trials","code":""},{"path":"/reference/tidy_dbinom.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Tidy_dbinom returns a data table that pairs number of successes with probabilities given the probability of a single trial and the total number of trials. — tidy_dbinom","text":"data frame pairing number successes probabilities.","code":""},{"path":"/reference/tidy_dbinom.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Tidy_dbinom returns a data table that pairs number of successes with probabilities given the probability of a single trial and the total number of trials. — tidy_dbinom","text":"","code":"tidy_dbinom(single_trial_prob = 1/6, num_trials = 4) #> # A tibble: 5 × 4 #>   num_successes probability single_trial_prob num_trials #>           <int>       <dbl>             <dbl>      <dbl> #> 1             0    0.482                0.167          4 #> 2             1    0.386                0.167          4 #> 3             2    0.116                0.167          4 #> 4             3    0.0154               0.167          4 #> 5             4    0.000772             0.167          4 tidy_dbinom(.5, 10) #> # A tibble: 11 × 4 #>    num_successes probability single_trial_prob num_trials #>            <int>       <dbl>             <dbl>      <dbl> #>  1             0    0.000977               0.5         10 #>  2             1    0.00977                0.5         10 #>  3             2    0.0439                 0.5         10 #>  4             3    0.117                  0.5         10 #>  5             4    0.205                  0.5         10 #>  6             5    0.246                  0.5         10 #>  7             6    0.205                  0.5         10 #>  8             7    0.117                  0.5         10 #>  9             8    0.0439                 0.5         10 #> 10             9    0.00977                0.5         10 #> 11            10    0.000977               0.5         10 tidy_dbinom(1/12, 3) #> # A tibble: 4 × 4 #>   num_successes probability single_trial_prob num_trials #>           <int>       <dbl>             <dbl>      <dbl> #> 1             0    0.770               0.0833          3 #> 2             1    0.210               0.0833          3 #> 3             2    0.0191              0.0833          3 #> 4             3    0.000579            0.0833          3 tidy_dbinom(.5, 20) #> # A tibble: 21 × 4 #>    num_successes probability single_trial_prob num_trials #>            <int>       <dbl>             <dbl>      <dbl> #>  1             0 0.000000954               0.5         20 #>  2             1 0.0000191                 0.5         20 #>  3             2 0.000181                  0.5         20 #>  4             3 0.00109                   0.5         20 #>  5             4 0.00462                   0.5         20 #>  6             5 0.0148                    0.5         20 #>  7             6 0.0370                    0.5         20 #>  8             7 0.0739                    0.5         20 #>  9             8 0.120                     0.5         20 #> 10             9 0.160                     0.5         20 #> # … with 11 more rows  library(ggplot2) ggplot(tidy_dbinom(1/6, num_trials = 8)) +   aes(x = num_successes) +   aes(y = probability) +   geom_lollipop()"}]
